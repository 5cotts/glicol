{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0","program":"/Users/chaosprint/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","dasp_slice","--edition=2018","/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=7a7462047c0b2715","-C","extra-filename=-7a7462047c0b2715","--out-dir","/Users/chaosprint/Dev/glicol-wasm/target/rls/debug/deps","-L","dependency=/Users/chaosprint/Dev/glicol-wasm/target/rls/debug/deps","--extern","dasp_frame=/Users/chaosprint/Dev/glicol-wasm/target/rls/debug/deps/libdasp_frame-fa325a60773f21d8.rmeta","--extern","dasp_sample=/Users/chaosprint/Dev/glicol-wasm/target/rls/debug/deps/libdasp_sample-b638ae605e5f5436.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/chaosprint/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/chaosprint/Dev/glicol-wasm/target/rls/debug/deps/libdasp_slice-7a7462047c0b2715.rmeta"},"prelude":{"crate_id":{"name":"dasp_slice","disambiguator":[6031979396062463861,16415149694212081907]},"crate_root":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src","external_crates":[{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/fixed_size_array.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":15,"id":{"name":"dasp_frame","disambiguator":[1581612173861956889,5984927822764315227]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","num":16,"id":{"name":"dasp_sample","disambiguator":[6408490087116748643,9102689448921963525]}}],"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":0,"byte_end":9316,"line_start":1,"line_end":361,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":971,"byte_end":987,"line_start":29,"line_end":29,"column_start":5,"column_end":21},"alias_span":null,"name":"from_frame_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":989,"byte_end":1009,"line_start":29,"line_end":29,"column_start":23,"column_end":43},"alias_span":null,"name":"from_frame_slice_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1011,"byte_end":1025,"line_start":29,"line_end":29,"column_start":45,"column_end":59},"alias_span":null,"name":"to_frame_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1027,"byte_end":1045,"line_start":29,"line_end":29,"column_start":61,"column_end":79},"alias_span":null,"name":"to_frame_slice_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1047,"byte_end":1063,"line_start":29,"line_end":29,"column_start":81,"column_end":97},"alias_span":null,"name":"DuplexFrameSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1069,"byte_end":1088,"line_start":30,"line_end":30,"column_start":5,"column_end":24},"alias_span":null,"name":"DuplexFrameSliceMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1090,"byte_end":1104,"line_start":30,"line_end":30,"column_start":26,"column_end":40},"alias_span":null,"name":"FromFrameSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1106,"byte_end":1123,"line_start":30,"line_end":30,"column_start":42,"column_end":59},"alias_span":null,"name":"FromFrameSliceMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":39},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1125,"byte_end":1137,"line_start":30,"line_end":30,"column_start":61,"column_end":73},"alias_span":null,"name":"ToFrameSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":43},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1139,"byte_end":1154,"line_start":30,"line_end":30,"column_start":75,"column_end":90},"alias_span":null,"name":"ToFrameSliceMut","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":0,"byte_end":9316,"line_start":1,"line_end":361,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":16},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":105},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":123},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":195}],"decl_id":null,"docs":" For working with slices of PCM audio data.","sig":null,"attributes":[{"value":"! For working with slices of PCM audio data.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":0,"byte_end":46,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":47,"byte_end":50,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Items related to conversion between slices of frames and slices of samples, particularly useful","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":51,"byte_end":150,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"! for working with interleaved data.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":151,"byte_end":189,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":190,"byte_end":193,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! ### Optional Features","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":194,"byte_end":219,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":220,"byte_end":223,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! - The **boxed** feature (or **slice-boxed** feature if using `dasp`) provides a suite of boxed","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":224,"byte_end":322,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"!   slice conversion traits and functions under the [**boxed**](./boxed/index.html) module.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":323,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ### no_std","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":421,"byte_end":435,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":436,"byte_end":439,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! If working in a `no_std` context, you can disable the default **std** feature with","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":440,"byte_end":526,"line_start":13,"line_end":13,"column_start":1,"column_end":87}},{"value":"! `--no-default-features`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":527,"byte_end":555,"line_start":14,"line_end":14,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9444,"byte_end":9458,"line_start":6,"line_end":6,"column_start":11,"column_end":25},"name":"FromFrameSlice","qualname":"::frame::FromFrameSlice","value":"FromFrameSlice<'a, F>","parent":null,"children":[{"krate":0,"index":34}],"decl_id":null,"docs":" For converting from a slice of `Frame`s to a slice of `Sample`s.\n","sig":null,"attributes":[{"value":"/ For converting from a slice of `Frame`s to a slice of `Sample`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9365,"byte_end":9433,"line_start":5,"line_end":5,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9495,"byte_end":9511,"line_start":10,"line_end":10,"column_start":8,"column_end":24},"name":"from_frame_slice","qualname":"::frame::FromFrameSlice::from_frame_slice","value":"fn (slice: &'a [F]) -> Self","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9619,"byte_end":9636,"line_start":14,"line_end":14,"column_start":11,"column_end":28},"name":"FromFrameSliceMut","qualname":"::frame::FromFrameSliceMut","value":"FromFrameSliceMut<'a, F>","parent":null,"children":[{"krate":0,"index":38}],"decl_id":null,"docs":" For converting from a slice of `Frame`s to a slice of `Sample`s.\n","sig":null,"attributes":[{"value":"/ For converting from a slice of `Frame`s to a slice of `Sample`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9540,"byte_end":9608,"line_start":13,"line_end":13,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9673,"byte_end":9693,"line_start":18,"line_end":18,"column_start":8,"column_end":28},"name":"from_frame_slice_mut","qualname":"::frame::FromFrameSliceMut::from_frame_slice_mut","value":"fn (slice: &'a mut [F]) -> Self","parent":{"krate":0,"index":35},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9805,"byte_end":9817,"line_start":22,"line_end":22,"column_start":11,"column_end":23},"name":"ToFrameSlice","qualname":"::frame::ToFrameSlice","value":"ToFrameSlice<'a, F>","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" For converting from a slice of `Sample`s to a slice of `Frame`s.\n","sig":null,"attributes":[{"value":"/ For converting from a slice of `Sample`s to a slice of `Frame`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9726,"byte_end":9794,"line_start":21,"line_end":21,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9854,"byte_end":9868,"line_start":26,"line_end":26,"column_start":8,"column_end":22},"name":"to_frame_slice","qualname":"::frame::ToFrameSlice::to_frame_slice","value":"fn (self) -> Option<&'a [F]>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9993,"byte_end":10008,"line_start":30,"line_end":30,"column_start":11,"column_end":26},"name":"ToFrameSliceMut","qualname":"::frame::ToFrameSliceMut","value":"ToFrameSliceMut<'a, F>","parent":null,"children":[{"krate":0,"index":46}],"decl_id":null,"docs":" For converting from a mutable slice of `Sample`s to a mutable slice of `Frame`s.\n","sig":null,"attributes":[{"value":"/ For converting from a mutable slice of `Sample`s to a mutable slice of `Frame`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":9898,"byte_end":9982,"line_start":29,"line_end":29,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":10045,"byte_end":10063,"line_start":34,"line_end":34,"column_start":8,"column_end":26},"name":"to_frame_slice_mut","qualname":"::frame::ToFrameSliceMut::to_frame_slice_mut","value":"fn (self) -> Option<&'a mut [F]>","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":10159,"byte_end":10175,"line_start":38,"line_end":38,"column_start":11,"column_end":27},"name":"DuplexFrameSlice","qualname":"::frame::DuplexFrameSlice","value":"DuplexFrameSlice<'a, F>: FromFrameSlice<'a, F> + ToFrameSlice<'a, F>","parent":null,"children":[],"decl_id":null,"docs":" For converting to and from a slice of `Frame`s.\n","sig":null,"attributes":[{"value":"/ For converting to and from a slice of `Frame`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":10097,"byte_end":10148,"line_start":37,"line_end":37,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":10323,"byte_end":10342,"line_start":45,"line_end":45,"column_start":11,"column_end":30},"name":"DuplexFrameSliceMut","qualname":"::frame::DuplexFrameSliceMut","value":"DuplexFrameSliceMut<'a, F>: FromFrameSliceMut<'a, F> + ToFrameSliceMut<'a, F>","parent":null,"children":[],"decl_id":null,"docs":" For converting to and from a mutable slice of `Frame`s.\n","sig":null,"attributes":[{"value":"/ For converting to and from a mutable slice of `Frame`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":10253,"byte_end":10312,"line_start":44,"line_end":44,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11971,"byte_end":11985,"line_start":125,"line_end":125,"column_start":8,"column_end":22},"name":"to_frame_slice","qualname":"::frame::to_frame_slice","value":"fn <'a, T, F> (slice: T) -> Option<&'a [F]>","parent":null,"children":[],"decl_id":null,"docs":" Converts the given slice into a slice of `Frame`s.","sig":null,"attributes":[{"value":"/ Converts the given slice into a slice of `Frame`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11333,"byte_end":11387,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11388,"byte_end":11391,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the number of channels in a single frame `F` is not a multiple of the number","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11392,"byte_end":11490,"line_start":107,"line_end":107,"column_start":1,"column_end":99}},{"value":"/ of samples in the given slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11491,"byte_end":11525,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11526,"byte_end":11529,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function that wraps the `ToFrameSlice` trait.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11530,"byte_end":11601,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11602,"byte_end":11605,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11606,"byte_end":11620,"line_start":112,"line_end":112,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11621,"byte_end":11624,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11625,"byte_end":11632,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11633,"byte_end":11648,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"/     let foo = &[0.0, 0.5, 0.0, -0.5][..];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11649,"byte_end":11694,"line_start":116,"line_end":116,"column_start":1,"column_end":46}},{"value":"/     let bar = dasp_slice::to_frame_slice(foo);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11695,"byte_end":11745,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/     assert_eq!(bar, Some(&[[0.0, 0.5], [0.0, -0.5]][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11746,"byte_end":11808,"line_start":118,"line_end":118,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11809,"byte_end":11812,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     let foo = &[0.0, 0.5, 0.0][..];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11813,"byte_end":11852,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/     let bar = dasp_slice::to_frame_slice(foo);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11853,"byte_end":11903,"line_start":121,"line_end":121,"column_start":1,"column_end":51}},{"value":"/     assert_eq!(bar, None::<&[[f32; 2]]>);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11904,"byte_end":11949,"line_start":122,"line_end":122,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11950,"byte_end":11955,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11956,"byte_end":11963,"line_start":124,"line_end":124,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12786,"byte_end":12804,"line_start":153,"line_end":153,"column_start":8,"column_end":26},"name":"to_frame_slice_mut","qualname":"::frame::to_frame_slice_mut","value":"fn <'a, T, F> (slice: T) -> Option<&'a mut [F]>","parent":null,"children":[],"decl_id":null,"docs":" Converts the given mutable slice into a mutable slice of `Frame`s.","sig":null,"attributes":[{"value":"/ Converts the given mutable slice into a mutable slice of `Frame`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12105,"byte_end":12175,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12176,"byte_end":12179,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the number of channels in a single frame `F` is not a multiple of the number","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12180,"byte_end":12278,"line_start":135,"line_end":135,"column_start":1,"column_end":99}},{"value":"/ of samples in the given slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12279,"byte_end":12313,"line_start":136,"line_end":136,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12314,"byte_end":12317,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function that wraps the `ToFrameSliceMut` trait.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12318,"byte_end":12392,"line_start":138,"line_end":138,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12393,"byte_end":12396,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12397,"byte_end":12411,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12412,"byte_end":12415,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12416,"byte_end":12423,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12424,"byte_end":12439,"line_start":143,"line_end":143,"column_start":1,"column_end":16}},{"value":"/     let foo = &mut [0.0, 0.5, 0.0, -0.5][..];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12440,"byte_end":12489,"line_start":144,"line_end":144,"column_start":1,"column_end":50}},{"value":"/     let bar = dasp_slice::to_frame_slice_mut(foo);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12490,"byte_end":12544,"line_start":145,"line_end":145,"column_start":1,"column_end":55}},{"value":"/     assert_eq!(bar, Some(&mut [[0.0, 0.5], [0.0, -0.5]][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12545,"byte_end":12611,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12612,"byte_end":12615,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/     let foo = &mut [0.0, 0.5, 0.0][..];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12616,"byte_end":12659,"line_start":148,"line_end":148,"column_start":1,"column_end":44}},{"value":"/     let bar = dasp_slice::to_frame_slice_mut(foo);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12660,"byte_end":12714,"line_start":149,"line_end":149,"column_start":1,"column_end":55}},{"value":"/     assert_eq!(bar, None::<&mut [[f32; 2]]>);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12715,"byte_end":12764,"line_start":150,"line_end":150,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12765,"byte_end":12770,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12771,"byte_end":12778,"line_start":152,"line_end":152,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13307,"byte_end":13323,"line_start":174,"line_end":174,"column_start":8,"column_end":24},"name":"from_frame_slice","qualname":"::frame::from_frame_slice","value":"fn <'a, T, F> (slice: &'a [F]) -> T","parent":null,"children":[],"decl_id":null,"docs":" Converts the given slice of `Frame`s into some slice `T`.","sig":null,"attributes":[{"value":"/ Converts the given slice of `Frame`s into some slice `T`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12935,"byte_end":12996,"line_start":161,"line_end":161,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":12997,"byte_end":13000,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function that wraps the `FromFrameSlice` trait.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13001,"byte_end":13074,"line_start":163,"line_end":163,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13075,"byte_end":13078,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13079,"byte_end":13093,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13094,"byte_end":13097,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13098,"byte_end":13105,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13106,"byte_end":13121,"line_start":168,"line_end":168,"column_start":1,"column_end":16}},{"value":"/     let foo = &[[0.0, 0.5], [0.0, -0.5]][..];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13122,"byte_end":13171,"line_start":169,"line_end":169,"column_start":1,"column_end":50}},{"value":"/     let bar: &[f32] = dasp_slice::from_frame_slice(foo);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13172,"byte_end":13232,"line_start":170,"line_end":170,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(bar, &[0.0, 0.5, 0.0, -0.5][..]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13233,"byte_end":13285,"line_start":171,"line_end":171,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13286,"byte_end":13291,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13292,"byte_end":13299,"line_start":173,"line_end":173,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13848,"byte_end":13868,"line_start":195,"line_end":195,"column_start":8,"column_end":28},"name":"from_frame_slice_mut","qualname":"::frame::from_frame_slice_mut","value":"fn <'a, T, F> (slice: &'a mut [F]) -> T","parent":null,"children":[],"decl_id":null,"docs":" Converts the given slice of mutable `Frame`s into some mutable slice `T`.","sig":null,"attributes":[{"value":"/ Converts the given slice of mutable `Frame`s into some mutable slice `T`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13441,"byte_end":13518,"line_start":182,"line_end":182,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13519,"byte_end":13522,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function that wraps the `FromFrameSliceMut` trait.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13523,"byte_end":13599,"line_start":184,"line_end":184,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13600,"byte_end":13603,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13604,"byte_end":13618,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13619,"byte_end":13622,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13623,"byte_end":13630,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13631,"byte_end":13646,"line_start":189,"line_end":189,"column_start":1,"column_end":16}},{"value":"/     let foo = &mut [[0.0, 0.5], [0.0, -0.5]][..];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13647,"byte_end":13700,"line_start":190,"line_end":190,"column_start":1,"column_end":54}},{"value":"/     let bar: &mut [f32] = dasp_slice::from_frame_slice_mut(foo);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13701,"byte_end":13769,"line_start":191,"line_end":191,"column_start":1,"column_end":69}},{"value":"/     assert_eq!(bar, &mut [0.0, 0.5, 0.0, -0.5][..]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13770,"byte_end":13826,"line_start":192,"line_end":192,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13827,"byte_end":13832,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":13833,"byte_end":13840,"line_start":194,"line_end":194,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1401,"byte_end":1416,"line_start":42,"line_end":42,"column_start":11,"column_end":26},"name":"FromSampleSlice","qualname":"::FromSampleSlice","value":"FromSampleSlice<'a, S>: Sized","parent":null,"children":[{"krate":0,"index":96}],"decl_id":null,"docs":" For converting from a slice of `Sample`s to a slice of `Frame`s.\n","sig":null,"attributes":[{"value":"/ For converting from a slice of `Sample`s to a slice of `Frame`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1322,"byte_end":1390,"line_start":41,"line_end":41,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1461,"byte_end":1478,"line_start":46,"line_end":46,"column_start":8,"column_end":25},"name":"from_sample_slice","qualname":"::FromSampleSlice::from_sample_slice","value":"fn (slice: &'a [S]) -> Option<Self>","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1610,"byte_end":1628,"line_start":50,"line_end":50,"column_start":11,"column_end":29},"name":"FromSampleSliceMut","qualname":"::FromSampleSliceMut","value":"FromSampleSliceMut<'a, S>: Sized","parent":null,"children":[{"krate":0,"index":100}],"decl_id":null,"docs":" For converting from a mutable slice of `Sample`s to a mutable slice of `Frame`s.\n","sig":null,"attributes":[{"value":"/ For converting from a mutable slice of `Sample`s to a mutable slice of `Frame`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1515,"byte_end":1599,"line_start":49,"line_end":49,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1673,"byte_end":1694,"line_start":54,"line_end":54,"column_start":8,"column_end":29},"name":"from_sample_slice_mut","qualname":"::FromSampleSliceMut::from_sample_slice_mut","value":"fn (slice: &'a mut [S]) -> Option<Self>","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":101},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1814,"byte_end":1827,"line_start":58,"line_end":58,"column_start":11,"column_end":24},"name":"ToSampleSlice","qualname":"::ToSampleSlice","value":"ToSampleSlice<'a, S>","parent":null,"children":[{"krate":0,"index":104}],"decl_id":null,"docs":" For converting from a slice of `Frame`s to a slice of `Sample`s.\n","sig":null,"attributes":[{"value":"/ For converting from a slice of `Frame`s to a slice of `Sample`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1735,"byte_end":1803,"line_start":57,"line_end":57,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1865,"byte_end":1880,"line_start":62,"line_end":62,"column_start":8,"column_end":23},"name":"to_sample_slice","qualname":"::ToSampleSlice::to_sample_slice","value":"fn (self) -> &'a [S]","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1997,"byte_end":2013,"line_start":66,"line_end":66,"column_start":11,"column_end":27},"name":"ToSampleSliceMut","qualname":"::ToSampleSliceMut","value":"ToSampleSliceMut<'a, S>","parent":null,"children":[{"krate":0,"index":108}],"decl_id":null,"docs":" For converting from a mutable slice of `Frame`s to a mutable slice of `Sample`s.\n","sig":null,"attributes":[{"value":"/ For converting from a mutable slice of `Frame`s to a mutable slice of `Sample`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1902,"byte_end":1986,"line_start":65,"line_end":65,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2051,"byte_end":2070,"line_start":70,"line_end":70,"column_start":8,"column_end":27},"name":"to_sample_slice_mut","qualname":"::ToSampleSliceMut::to_sample_slice_mut","value":"fn (self) -> &'a mut [S]","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":109},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2159,"byte_end":2176,"line_start":74,"line_end":74,"column_start":11,"column_end":28},"name":"DuplexSampleSlice","qualname":"::DuplexSampleSlice","value":"DuplexSampleSlice<'a, S>: FromSampleSlice<'a, S> + ToSampleSlice<'a, S>","parent":null,"children":[],"decl_id":null,"docs":" For converting to and from a slice of `Sample`s.\n","sig":null,"attributes":[{"value":"/ For converting to and from a slice of `Sample`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2096,"byte_end":2148,"line_start":73,"line_end":73,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":112},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2328,"byte_end":2348,"line_start":81,"line_end":81,"column_start":11,"column_end":31},"name":"DuplexSampleSliceMut","qualname":"::DuplexSampleSliceMut","value":"DuplexSampleSliceMut<'a, S>: FromSampleSliceMut<'a, S> + ToSampleSliceMut<'a, S>","parent":null,"children":[],"decl_id":null,"docs":" For converting to and from a mutable slice of `Sample`s.\n","sig":null,"attributes":[{"value":"/ For converting to and from a mutable slice of `Sample`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2257,"byte_end":2317,"line_start":80,"line_end":80,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":115},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2550,"byte_end":2561,"line_start":89,"line_end":89,"column_start":11,"column_end":22},"name":"DuplexSlice","qualname":"::DuplexSlice","value":"DuplexSlice<'a, S, F>: DuplexSampleSlice<'a, S> + DuplexFrameSlice<'a, F>","parent":null,"children":[],"decl_id":null,"docs":" For converting to and from a slice of `Sample`s of type `S` and a slice of `Frame`s of type\n `F`.\n","sig":null,"attributes":[{"value":"/ For converting to and from a slice of `Sample`s of type `S` and a slice of `Frame`s of type","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2435,"byte_end":2530,"line_start":87,"line_end":87,"column_start":1,"column_end":96}},{"value":"/ `F`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2531,"byte_end":2539,"line_start":88,"line_end":88,"column_start":1,"column_end":9}}]},{"kind":"Trait","id":{"krate":0,"index":119},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2799,"byte_end":2813,"line_start":98,"line_end":98,"column_start":11,"column_end":25},"name":"DuplexSliceMut","qualname":"::DuplexSliceMut","value":"DuplexSliceMut<'a, S, F>: DuplexSampleSliceMut<'a, S> + DuplexFrameSliceMut<'a, F>","parent":null,"children":[],"decl_id":null,"docs":" For converting to and from a mutable slice of `Sample`s of type `S` and a slice of `Frame`s of\n type `F`.\n","sig":null,"attributes":[{"value":"/ For converting to and from a mutable slice of `Sample`s of type `S` and a slice of `Frame`s of","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2676,"byte_end":2774,"line_start":96,"line_end":96,"column_start":1,"column_end":99}},{"value":"/ type `F`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2775,"byte_end":2788,"line_start":97,"line_end":97,"column_start":1,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":157},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4772,"byte_end":4787,"line_start":195,"line_end":195,"column_start":8,"column_end":23},"name":"to_sample_slice","qualname":"::to_sample_slice","value":"fn <'a, T, S> (slice: T) -> &'a [S]","parent":null,"children":[],"decl_id":null,"docs":" Converts the given slice into a slice of `Sample`s.","sig":null,"attributes":[{"value":"/ Converts the given slice into a slice of `Sample`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4416,"byte_end":4471,"line_start":182,"line_end":182,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4472,"byte_end":4475,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function that wraps the `ToSampleSlice` trait.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4476,"byte_end":4548,"line_start":184,"line_end":184,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4549,"byte_end":4552,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4553,"byte_end":4567,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4568,"byte_end":4571,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4572,"byte_end":4579,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4580,"byte_end":4595,"line_start":189,"line_end":189,"column_start":1,"column_end":16}},{"value":"/     let foo = &[[0.0, 0.5], [0.0, -0.5]][..];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4596,"byte_end":4645,"line_start":190,"line_end":190,"column_start":1,"column_end":50}},{"value":"/     let bar = dasp_slice::to_sample_slice(foo);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4646,"byte_end":4697,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/     assert_eq!(bar, &[0.0, 0.5, 0.0, -0.5][..]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4698,"byte_end":4750,"line_start":192,"line_end":192,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4751,"byte_end":4756,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4757,"byte_end":4764,"line_start":194,"line_end":194,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5301,"byte_end":5320,"line_start":216,"line_end":216,"column_start":8,"column_end":27},"name":"to_sample_slice_mut","qualname":"::to_sample_slice_mut","value":"fn <'a, T, S> (slice: T) -> &'a mut [S]","parent":null,"children":[],"decl_id":null,"docs":" Converts the given mutable slice of `Frame`s into a mutable slice of `Sample`s.","sig":null,"attributes":[{"value":"/ Converts the given mutable slice of `Frame`s into a mutable slice of `Sample`s.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4902,"byte_end":4985,"line_start":203,"line_end":203,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4986,"byte_end":4989,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function that wraps the `ToSampleSliceMut` trait.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4990,"byte_end":5065,"line_start":205,"line_end":205,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5066,"byte_end":5069,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5070,"byte_end":5084,"line_start":207,"line_end":207,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5085,"byte_end":5088,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5089,"byte_end":5096,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5097,"byte_end":5112,"line_start":210,"line_end":210,"column_start":1,"column_end":16}},{"value":"/     let foo = &mut [[0.0, 0.5], [0.0, -0.5]][..];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5113,"byte_end":5166,"line_start":211,"line_end":211,"column_start":1,"column_end":54}},{"value":"/     let bar = dasp_slice::to_sample_slice_mut(foo);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5167,"byte_end":5222,"line_start":212,"line_end":212,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(bar, &mut [0.0, 0.5, 0.0, -0.5][..]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5223,"byte_end":5279,"line_start":213,"line_end":213,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5280,"byte_end":5285,"line_start":214,"line_end":214,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5286,"byte_end":5293,"line_start":215,"line_end":215,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5965,"byte_end":5982,"line_start":240,"line_end":240,"column_start":8,"column_end":25},"name":"from_sample_slice","qualname":"::from_sample_slice","value":"fn <'a, T, S> (slice: &'a [S]) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the given slice of `Sample`s into some slice `T`.","sig":null,"attributes":[{"value":"/ Converts the given slice of `Sample`s into some slice `T`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5446,"byte_end":5508,"line_start":224,"line_end":224,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5509,"byte_end":5512,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the number of channels in a single frame is not a multiple of the number of","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5513,"byte_end":5610,"line_start":226,"line_end":226,"column_start":1,"column_end":98}},{"value":"/ samples in the given slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5611,"byte_end":5642,"line_start":227,"line_end":227,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5643,"byte_end":5646,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function that wraps the `FromSampleSlice` trait.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5647,"byte_end":5721,"line_start":229,"line_end":229,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5722,"byte_end":5725,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5726,"byte_end":5740,"line_start":231,"line_end":231,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5741,"byte_end":5744,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5745,"byte_end":5752,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5753,"byte_end":5768,"line_start":234,"line_end":234,"column_start":1,"column_end":16}},{"value":"/     let foo = &[0.0, 0.5, 0.0, -0.5][..];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5769,"byte_end":5814,"line_start":235,"line_end":235,"column_start":1,"column_end":46}},{"value":"/     let bar: Option<&_> = dasp_slice::from_sample_slice(foo);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5815,"byte_end":5880,"line_start":236,"line_end":236,"column_start":1,"column_end":66}},{"value":"/     assert_eq!(bar, Some(&[[0.0, 0.5], [0.0, -0.5]][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5881,"byte_end":5943,"line_start":237,"line_end":237,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5944,"byte_end":5949,"line_start":238,"line_end":238,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":5950,"byte_end":5957,"line_start":239,"line_end":239,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6665,"byte_end":6686,"line_start":264,"line_end":264,"column_start":8,"column_end":29},"name":"from_sample_slice_mut","qualname":"::from_sample_slice_mut","value":"fn <'a, T, S> (slice: &'a mut [S]) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the given mutable slice of `Sample`s into some mutable slice `T`.","sig":null,"attributes":[{"value":"/ Converts the given mutable slice of `Sample`s into some mutable slice `T`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6111,"byte_end":6189,"line_start":248,"line_end":248,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6190,"byte_end":6193,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the number of channels in a single frame is not a multiple of the number of","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6194,"byte_end":6291,"line_start":250,"line_end":250,"column_start":1,"column_end":98}},{"value":"/ samples in the given slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6292,"byte_end":6323,"line_start":251,"line_end":251,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6324,"byte_end":6327,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function that wraps the `FromSampleSliceMut` trait.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6328,"byte_end":6405,"line_start":253,"line_end":253,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6406,"byte_end":6409,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6410,"byte_end":6424,"line_start":255,"line_end":255,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6425,"byte_end":6428,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6429,"byte_end":6436,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6437,"byte_end":6452,"line_start":258,"line_end":258,"column_start":1,"column_end":16}},{"value":"/     let foo = &mut [0.0, 0.5, 0.0, -0.5][..];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6453,"byte_end":6502,"line_start":259,"line_end":259,"column_start":1,"column_end":50}},{"value":"/     let bar: Option<&mut _> = dasp_slice::from_sample_slice_mut(foo);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6503,"byte_end":6576,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/     assert_eq!(bar, Some(&mut [[0.0, 0.5], [0.0, -0.5]][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6577,"byte_end":6643,"line_start":261,"line_end":261,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6644,"byte_end":6649,"line_start":262,"line_end":262,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6650,"byte_end":6657,"line_start":263,"line_end":263,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":173},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6931,"byte_end":6943,"line_start":276,"line_end":276,"column_start":8,"column_end":20},"name":"map_in_place","qualname":"::map_in_place","value":"fn <F, M> (a: &mut [F], mut map: M) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Mutate every element in the slice with the given function.\n","sig":null,"attributes":[{"value":"/ Mutate every element in the slice with the given function.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6851,"byte_end":6913,"line_start":274,"line_end":274,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":6914,"byte_end":6923,"line_start":275,"line_end":275,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":176},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7161,"byte_end":7172,"line_start":288,"line_end":288,"column_start":8,"column_end":19},"name":"equilibrium","qualname":"::equilibrium","value":"fn <F> (a: &mut [F]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the slice of frames at the associated `Sample`'s equilibrium value.\n","sig":null,"attributes":[{"value":"/ Sets the slice of frames at the associated `Sample`'s equilibrium value.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7067,"byte_end":7143,"line_start":286,"line_end":286,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7144,"byte_end":7153,"line_start":287,"line_end":287,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":179},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7468,"byte_end":7484,"line_start":300,"line_end":300,"column_start":8,"column_end":24},"name":"zip_map_in_place","qualname":"::zip_map_in_place","value":"fn <FA, FB, M> (a: &mut [FA], b: &[FB], zip_map: M) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Mutate every frame in slice `a` while reading from each frame in slice `b` in lock-step using\n the given function.","sig":null,"attributes":[{"value":"/ Mutate every frame in slice `a` while reading from each frame in slice `b` in lock-step using","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7254,"byte_end":7351,"line_start":295,"line_end":295,"column_start":1,"column_end":98}},{"value":"/ the given function.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7352,"byte_end":7375,"line_start":296,"line_end":296,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7376,"byte_end":7379,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the length of `b` is not equal to the length of `a`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7380,"byte_end":7450,"line_start":298,"line_end":298,"column_start":1,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7451,"byte_end":7460,"line_start":299,"line_end":299,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7905,"byte_end":7910,"line_start":318,"line_end":318,"column_start":8,"column_end":13},"name":"write","qualname":"::write","value":"fn <F> (a: &mut [F], b: &[F]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Writes every sample in slice `b` to slice `a`.","sig":null,"attributes":[{"value":"/ Writes every sample in slice `b` to slice `a`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7789,"byte_end":7839,"line_start":314,"line_end":314,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7840,"byte_end":7843,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the slice lengths differ.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7844,"byte_end":7887,"line_start":316,"line_end":316,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7888,"byte_end":7897,"line_start":317,"line_end":317,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":186},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":8094,"byte_end":8106,"line_start":327,"line_end":327,"column_start":8,"column_end":20},"name":"add_in_place","qualname":"::add_in_place","value":"fn <FA, FB> (a: &mut [FA], b: &[FB]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds every sample in slice `b` to every sample in slice `a` respectively.\n","sig":null,"attributes":[{"value":"/ Adds every sample in slice `b` to every sample in slice `a` respectively.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":7999,"byte_end":8076,"line_start":325,"line_end":325,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":8077,"byte_end":8086,"line_start":326,"line_end":326,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":8412,"byte_end":8445,"line_start":337,"line_end":337,"column_start":8,"column_end":41},"name":"add_in_place_with_amp_per_channel","qualname":"::add_in_place_with_amp_per_channel","value":"fn <FA, FB, A> (a: &mut [FA], b: &[FB], amp_per_channel: A) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scale the amplitude of each frame in `b` by `amp_per_channel` before summing it onto `a`.\n","sig":null,"attributes":[{"value":"/ Scale the amplitude of each frame in `b` by `amp_per_channel` before summing it onto `a`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":8301,"byte_end":8394,"line_start":335,"line_end":335,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":8395,"byte_end":8404,"line_start":336,"line_end":336,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11123,"byte_end":11124,"line_start":91,"line_end":91,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11248,"byte_end":11249,"line_start":98,"line_end":98,"column_start":47,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":3771,"byte_end":3772,"line_start":149,"line_end":149,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":3900,"byte_end":3901,"line_start":156,"line_end":156,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4032,"byte_end":4033,"line_start":163,"line_end":163,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4192,"byte_end":4193,"line_start":171,"line_end":171,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":10184,"byte_end":10198,"line_start":38,"line_end":38,"column_start":36,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":31},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":10208,"byte_end":10220,"line_start":38,"line_end":38,"column_start":60,"column_end":72},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":10351,"byte_end":10368,"line_start":45,"line_end":45,"column_start":39,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":35},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":10378,"byte_end":10393,"line_start":45,"line_end":45,"column_start":66,"column_end":81},"kind":"SuperTrait","from":{"krate":0,"index":43},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11123,"byte_end":11124,"line_start":91,"line_end":91,"column_start":44,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":72},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/frame/mod.rs","byte_start":11248,"byte_end":11249,"line_start":98,"line_end":98,"column_start":47,"column_end":48},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":76},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1425,"byte_end":1430,"line_start":42,"line_end":42,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":1637,"byte_end":1642,"line_start":50,"line_end":50,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2185,"byte_end":2200,"line_start":74,"line_end":74,"column_start":37,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":93},"to":{"krate":0,"index":109}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2210,"byte_end":2223,"line_start":74,"line_end":74,"column_start":62,"column_end":75},"kind":"SuperTrait","from":{"krate":0,"index":101},"to":{"krate":0,"index":109}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2357,"byte_end":2375,"line_start":81,"line_end":81,"column_start":40,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":97},"to":{"krate":0,"index":112}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2385,"byte_end":2401,"line_start":81,"line_end":81,"column_start":68,"column_end":84},"kind":"SuperTrait","from":{"krate":0,"index":105},"to":{"krate":0,"index":112}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2573,"byte_end":2590,"line_start":89,"line_end":89,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":109},"to":{"krate":0,"index":115}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2600,"byte_end":2616,"line_start":89,"line_end":89,"column_start":61,"column_end":77},"kind":"SuperTrait","from":{"krate":0,"index":47},"to":{"krate":0,"index":115}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2829,"byte_end":2849,"line_start":99,"line_end":99,"column_start":5,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":112},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":2859,"byte_end":2878,"line_start":99,"line_end":99,"column_start":35,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":50},"to":{"krate":0,"index":119}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":3771,"byte_end":3772,"line_start":149,"line_end":149,"column_start":45,"column_end":46},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":142},"to":{"krate":0,"index":109}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":3900,"byte_end":3901,"line_start":156,"line_end":156,"column_start":48,"column_end":49},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":146},"to":{"krate":0,"index":112}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4032,"byte_end":4033,"line_start":163,"line_end":163,"column_start":45,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":151},"to":{"krate":0,"index":115}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_slice-0.11.0/src/lib.rs","byte_start":4192,"byte_end":4193,"line_start":171,"line_end":171,"column_start":48,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":156},"to":{"krate":0,"index":119}}]}