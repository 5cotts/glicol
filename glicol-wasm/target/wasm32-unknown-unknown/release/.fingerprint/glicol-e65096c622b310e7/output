{"message":"unused imports: `Pairs`, `Rule`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/system.rs","byte_start":104,"byte_end":109,"line_start":3,"line_end":3,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"use super::super::{Pairs, Rule, NodeData, BoxedNodeSend, EngineError};","highlight_start":20,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/system.rs","byte_start":111,"byte_end":115,"line_start":3,"line_end":3,"column_start":27,"column_end":31,"is_primary":true,"text":[{"text":"use super::super::{Pairs, Rule, NodeData, BoxedNodeSend, EngineError};","highlight_start":27,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/system.rs","byte_start":104,"byte_end":117,"line_start":3,"line_end":3,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"use super::super::{Pairs, Rule, NodeData, BoxedNodeSend, EngineError};","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Pairs`, `Rule`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/system.rs:3:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse super::super::{Pairs, Rule, NodeData, BoxedNodeSend, EngineError};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `midi_or_float`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/reverb.rs","byte_start":110,"byte_end":123,"line_start":2,"line_end":2,"column_start":72,"column_end":85,"is_primary":true,"text":[{"text":"use super::super::{Engine, Rule, NodeData, BoxedNodeSend, EngineError, midi_or_float};","highlight_start":72,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/reverb.rs","byte_start":108,"byte_end":123,"line_start":2,"line_end":2,"column_start":70,"column_end":85,"is_primary":true,"text":[{"text":"use super::super::{Engine, Rule, NodeData, BoxedNodeSend, EngineError, midi_or_float};","highlight_start":70,"highlight_end":85}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `midi_or_float`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/reverb.rs:2:72\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse super::super::{Engine, Rule, NodeData, BoxedNodeSend, EngineError, midi_or_float};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"value assigned to `sidechain_id` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":17436,"byte_end":17448,"line_start":451,"line_end":451,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"                sidechain_id += 1;","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/operator.rs","byte_start":205,"byte_end":246,"line_start":9,"line_end":11,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"    handle_params!({","highlight_start":5,"highlight_end":21},{"text":"        mul: 0.0","highlight_start":1,"highlight_end":17},{"text":"    });","highlight_start":1,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"handle_params!","def_site_span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":16221,"byte_end":18097,"line_start":423,"line_end":478,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! handle_params {","highlight_start":1,"highlight_end":29},{"text":"    ( ","highlight_start":1,"highlight_end":7},{"text":"        { $($id: ident: $default: expr),* }","highlight_start":1,"highlight_end":44},{"text":"        $(,{$( $extra_params: ident : $val: expr),* })?","highlight_start":1,"highlight_end":56},{"text":"        $(,[$( ( $related: ident, $extra_id: ident, $handler: expr) ),* ])?","highlight_start":1,"highlight_end":76},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        pub fn new(paras: &mut Pairs<Rule>) ->","highlight_start":1,"highlight_end":47},{"text":"        Result<(NodeData<BoxedNodeSend>, Vec<String>), EngineError> {","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut sidechains = Vec::<String>::new();","highlight_start":1,"highlight_end":55},{"text":"            let mut params_val = std::collections::HashMap::<&str, f32>::new();","highlight_start":1,"highlight_end":80},{"text":"            let mut sidechain_ids = Vec::<u8>::new();","highlight_start":1,"highlight_end":54},{"text":"            let mut sidechain_id: u8 = 0;","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // TODO: need to handle unwarp","highlight_start":1,"highlight_end":43},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                let current_param: String = paras.next().unwrap().as_str().to_string();","highlight_start":1,"highlight_end":88},{"text":"                let parse_result = current_param.parse::<f32>();","highlight_start":1,"highlight_end":65},{"text":"                match parse_result {","highlight_start":1,"highlight_end":37},{"text":"                    Ok(val) => {","highlight_start":1,"highlight_end":33},{"text":"                        params_val.insert(stringify!($id), val);","highlight_start":1,"highlight_end":65},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                    Err(_) => {","highlight_start":1,"highlight_end":32},{"text":"                        sidechains.push(current_param);","highlight_start":1,"highlight_end":56},{"text":"                        params_val.insert(stringify!($id), $default);","highlight_start":1,"highlight_end":70},{"text":"                        sidechain_ids.push(sidechain_id);","highlight_start":1,"highlight_end":58},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };","highlight_start":1,"highlight_end":19},{"text":"                sidechain_id += 1;","highlight_start":1,"highlight_end":35},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    let $extra_id = $handler(params_val[stringify!($related)]);","highlight_start":1,"highlight_end":80},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            )?","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            Ok((NodeData::new1( BoxedNodeSend::new( Self {","highlight_start":1,"highlight_end":59},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $id: params_val[stringify!($id)],","highlight_start":1,"highlight_end":54},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_params: $val,","highlight_start":1,"highlight_end":45},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_id,","highlight_start":1,"highlight_end":35},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                sidechain_ids","highlight_start":1,"highlight_end":30},{"text":"            })), sidechains))","highlight_start":1,"highlight_end":30},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `sidechain_id` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/lib.rs:451:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                sidechain_id += 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/operator.rs:9:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    handle_params!({\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mul: 0.0\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `sidechain_id` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":17436,"byte_end":17448,"line_start":451,"line_end":451,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"                sidechain_id += 1;","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/operator.rs","byte_start":1821,"byte_end":1862,"line_start":58,"line_end":60,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"    handle_params!({","highlight_start":5,"highlight_end":21},{"text":"        inc: 0.0","highlight_start":1,"highlight_end":17},{"text":"    });","highlight_start":1,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"handle_params!","def_site_span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":16221,"byte_end":18097,"line_start":423,"line_end":478,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! handle_params {","highlight_start":1,"highlight_end":29},{"text":"    ( ","highlight_start":1,"highlight_end":7},{"text":"        { $($id: ident: $default: expr),* }","highlight_start":1,"highlight_end":44},{"text":"        $(,{$( $extra_params: ident : $val: expr),* })?","highlight_start":1,"highlight_end":56},{"text":"        $(,[$( ( $related: ident, $extra_id: ident, $handler: expr) ),* ])?","highlight_start":1,"highlight_end":76},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        pub fn new(paras: &mut Pairs<Rule>) ->","highlight_start":1,"highlight_end":47},{"text":"        Result<(NodeData<BoxedNodeSend>, Vec<String>), EngineError> {","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut sidechains = Vec::<String>::new();","highlight_start":1,"highlight_end":55},{"text":"            let mut params_val = std::collections::HashMap::<&str, f32>::new();","highlight_start":1,"highlight_end":80},{"text":"            let mut sidechain_ids = Vec::<u8>::new();","highlight_start":1,"highlight_end":54},{"text":"            let mut sidechain_id: u8 = 0;","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // TODO: need to handle unwarp","highlight_start":1,"highlight_end":43},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                let current_param: String = paras.next().unwrap().as_str().to_string();","highlight_start":1,"highlight_end":88},{"text":"                let parse_result = current_param.parse::<f32>();","highlight_start":1,"highlight_end":65},{"text":"                match parse_result {","highlight_start":1,"highlight_end":37},{"text":"                    Ok(val) => {","highlight_start":1,"highlight_end":33},{"text":"                        params_val.insert(stringify!($id), val);","highlight_start":1,"highlight_end":65},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                    Err(_) => {","highlight_start":1,"highlight_end":32},{"text":"                        sidechains.push(current_param);","highlight_start":1,"highlight_end":56},{"text":"                        params_val.insert(stringify!($id), $default);","highlight_start":1,"highlight_end":70},{"text":"                        sidechain_ids.push(sidechain_id);","highlight_start":1,"highlight_end":58},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };","highlight_start":1,"highlight_end":19},{"text":"                sidechain_id += 1;","highlight_start":1,"highlight_end":35},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    let $extra_id = $handler(params_val[stringify!($related)]);","highlight_start":1,"highlight_end":80},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            )?","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            Ok((NodeData::new1( BoxedNodeSend::new( Self {","highlight_start":1,"highlight_end":59},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $id: params_val[stringify!($id)],","highlight_start":1,"highlight_end":54},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_params: $val,","highlight_start":1,"highlight_end":45},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_id,","highlight_start":1,"highlight_end":35},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                sidechain_ids","highlight_start":1,"highlight_end":30},{"text":"            })), sidechains))","highlight_start":1,"highlight_end":30},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `sidechain_id` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/lib.rs:451:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                sidechain_id += 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/operator.rs:58:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    handle_params!({\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        inc: 0.0\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `sidechain_id` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":17436,"byte_end":17448,"line_start":451,"line_end":451,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"                sidechain_id += 1;","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/envelope.rs","byte_start":376,"byte_end":485,"line_start":19,"line_end":25,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"    handle_params!({","highlight_start":5,"highlight_end":21},{"text":"        attack: 0.01,","highlight_start":1,"highlight_end":22},{"text":"        decay: 0.3","highlight_start":1,"highlight_end":19},{"text":"    }, {","highlight_start":1,"highlight_end":9},{"text":"        pos: 0,","highlight_start":1,"highlight_end":16},{"text":"        scale: 1.0","highlight_start":1,"highlight_end":19},{"text":"    });","highlight_start":1,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"handle_params!","def_site_span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":16221,"byte_end":18097,"line_start":423,"line_end":478,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! handle_params {","highlight_start":1,"highlight_end":29},{"text":"    ( ","highlight_start":1,"highlight_end":7},{"text":"        { $($id: ident: $default: expr),* }","highlight_start":1,"highlight_end":44},{"text":"        $(,{$( $extra_params: ident : $val: expr),* })?","highlight_start":1,"highlight_end":56},{"text":"        $(,[$( ( $related: ident, $extra_id: ident, $handler: expr) ),* ])?","highlight_start":1,"highlight_end":76},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        pub fn new(paras: &mut Pairs<Rule>) ->","highlight_start":1,"highlight_end":47},{"text":"        Result<(NodeData<BoxedNodeSend>, Vec<String>), EngineError> {","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut sidechains = Vec::<String>::new();","highlight_start":1,"highlight_end":55},{"text":"            let mut params_val = std::collections::HashMap::<&str, f32>::new();","highlight_start":1,"highlight_end":80},{"text":"            let mut sidechain_ids = Vec::<u8>::new();","highlight_start":1,"highlight_end":54},{"text":"            let mut sidechain_id: u8 = 0;","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // TODO: need to handle unwarp","highlight_start":1,"highlight_end":43},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                let current_param: String = paras.next().unwrap().as_str().to_string();","highlight_start":1,"highlight_end":88},{"text":"                let parse_result = current_param.parse::<f32>();","highlight_start":1,"highlight_end":65},{"text":"                match parse_result {","highlight_start":1,"highlight_end":37},{"text":"                    Ok(val) => {","highlight_start":1,"highlight_end":33},{"text":"                        params_val.insert(stringify!($id), val);","highlight_start":1,"highlight_end":65},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                    Err(_) => {","highlight_start":1,"highlight_end":32},{"text":"                        sidechains.push(current_param);","highlight_start":1,"highlight_end":56},{"text":"                        params_val.insert(stringify!($id), $default);","highlight_start":1,"highlight_end":70},{"text":"                        sidechain_ids.push(sidechain_id);","highlight_start":1,"highlight_end":58},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };","highlight_start":1,"highlight_end":19},{"text":"                sidechain_id += 1;","highlight_start":1,"highlight_end":35},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    let $extra_id = $handler(params_val[stringify!($related)]);","highlight_start":1,"highlight_end":80},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            )?","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            Ok((NodeData::new1( BoxedNodeSend::new( Self {","highlight_start":1,"highlight_end":59},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $id: params_val[stringify!($id)],","highlight_start":1,"highlight_end":54},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_params: $val,","highlight_start":1,"highlight_end":45},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_id,","highlight_start":1,"highlight_end":35},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                sidechain_ids","highlight_start":1,"highlight_end":30},{"text":"            })), sidechains))","highlight_start":1,"highlight_end":30},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `sidechain_id` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/lib.rs:451:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                sidechain_id += 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/envelope.rs:19:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    handle_params!({\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        attack: 0.01,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        decay: 0.3\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }, {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pos: 0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        scale: 1.0\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    });\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `sidechain_id` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":17436,"byte_end":17448,"line_start":451,"line_end":451,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"                sidechain_id += 1;","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/filter.rs","byte_start":7659,"byte_end":8192,"line_start":233,"line_end":250,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    handle_params!(","highlight_start":5,"highlight_end":20},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            delay: 0.5,","highlight_start":1,"highlight_end":24},{"text":"            decay: 2.0","highlight_start":1,"highlight_end":23},{"text":"        }, [","highlight_start":1,"highlight_end":13},{"text":"            (","highlight_start":1,"highlight_end":14},{"text":"                delay, bufx, |d: f32| -> Fixed {","highlight_start":1,"highlight_end":49},{"text":"                    let size = (d / 1000.0 * 44100.0) as usize;","highlight_start":1,"highlight_end":64},{"text":"                    ring_buffer::Fixed::from(vec![0.0; size])","highlight_start":1,"highlight_end":62},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ), (","highlight_start":1,"highlight_end":17},{"text":"                delay, bufy, |d: f32| -> Fixed {","highlight_start":1,"highlight_end":49},{"text":"                    let size = (d / 1000.0 * 44100.0) as usize;","highlight_start":1,"highlight_end":64},{"text":"                    ring_buffer::Fixed::from(vec![0.0; size])","highlight_start":1,"highlight_end":62},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        ]","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"handle_params!","def_site_span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":16221,"byte_end":18097,"line_start":423,"line_end":478,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! handle_params {","highlight_start":1,"highlight_end":29},{"text":"    ( ","highlight_start":1,"highlight_end":7},{"text":"        { $($id: ident: $default: expr),* }","highlight_start":1,"highlight_end":44},{"text":"        $(,{$( $extra_params: ident : $val: expr),* })?","highlight_start":1,"highlight_end":56},{"text":"        $(,[$( ( $related: ident, $extra_id: ident, $handler: expr) ),* ])?","highlight_start":1,"highlight_end":76},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        pub fn new(paras: &mut Pairs<Rule>) ->","highlight_start":1,"highlight_end":47},{"text":"        Result<(NodeData<BoxedNodeSend>, Vec<String>), EngineError> {","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut sidechains = Vec::<String>::new();","highlight_start":1,"highlight_end":55},{"text":"            let mut params_val = std::collections::HashMap::<&str, f32>::new();","highlight_start":1,"highlight_end":80},{"text":"            let mut sidechain_ids = Vec::<u8>::new();","highlight_start":1,"highlight_end":54},{"text":"            let mut sidechain_id: u8 = 0;","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // TODO: need to handle unwarp","highlight_start":1,"highlight_end":43},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                let current_param: String = paras.next().unwrap().as_str().to_string();","highlight_start":1,"highlight_end":88},{"text":"                let parse_result = current_param.parse::<f32>();","highlight_start":1,"highlight_end":65},{"text":"                match parse_result {","highlight_start":1,"highlight_end":37},{"text":"                    Ok(val) => {","highlight_start":1,"highlight_end":33},{"text":"                        params_val.insert(stringify!($id), val);","highlight_start":1,"highlight_end":65},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                    Err(_) => {","highlight_start":1,"highlight_end":32},{"text":"                        sidechains.push(current_param);","highlight_start":1,"highlight_end":56},{"text":"                        params_val.insert(stringify!($id), $default);","highlight_start":1,"highlight_end":70},{"text":"                        sidechain_ids.push(sidechain_id);","highlight_start":1,"highlight_end":58},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };","highlight_start":1,"highlight_end":19},{"text":"                sidechain_id += 1;","highlight_start":1,"highlight_end":35},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    let $extra_id = $handler(params_val[stringify!($related)]);","highlight_start":1,"highlight_end":80},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            )?","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            Ok((NodeData::new1( BoxedNodeSend::new( Self {","highlight_start":1,"highlight_end":59},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $id: params_val[stringify!($id)],","highlight_start":1,"highlight_end":54},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_params: $val,","highlight_start":1,"highlight_end":45},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_id,","highlight_start":1,"highlight_end":35},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                sidechain_ids","highlight_start":1,"highlight_end":30},{"text":"            })), sidechains))","highlight_start":1,"highlight_end":30},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `sidechain_id` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/lib.rs:451:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                sidechain_id += 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/filter.rs:233:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m233\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    handle_params!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m235\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            delay: 0.5,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            decay: 2.0\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `sidechain_id` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":17436,"byte_end":17448,"line_start":451,"line_end":451,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"                sidechain_id += 1;","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/filter.rs","byte_start":10413,"byte_end":11011,"line_start":313,"line_end":332,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    handle_params!(","highlight_start":5,"highlight_end":20},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            delay_time: 600.0,","highlight_start":1,"highlight_end":31},{"text":"            gain: 0.5,","highlight_start":1,"highlight_end":23},{"text":"            forward: 0.5,","highlight_start":1,"highlight_end":26},{"text":"            back: 0.5","highlight_start":1,"highlight_end":22},{"text":"        }, [","highlight_start":1,"highlight_end":13},{"text":"            (","highlight_start":1,"highlight_end":14},{"text":"                delay_time, bufx, |d: f32| -> Fixed {","highlight_start":1,"highlight_end":54},{"text":"                    let size = (d / 1000.0 * 44100.0) as usize;","highlight_start":1,"highlight_end":64},{"text":"                    ring_buffer::Fixed::from(vec![0.0; size])","highlight_start":1,"highlight_end":62},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            ), (","highlight_start":1,"highlight_end":17},{"text":"                delay_time, bufy, |d: f32| -> Fixed {","highlight_start":1,"highlight_end":54},{"text":"                    let size = (d / 1000.0 * 44100.0) as usize;","highlight_start":1,"highlight_end":64},{"text":"                    ring_buffer::Fixed::from(vec![0.0; size])","highlight_start":1,"highlight_end":62},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        ]","highlight_start":1,"highlight_end":10},{"text":"    );","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"handle_params!","def_site_span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":16221,"byte_end":18097,"line_start":423,"line_end":478,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! handle_params {","highlight_start":1,"highlight_end":29},{"text":"    ( ","highlight_start":1,"highlight_end":7},{"text":"        { $($id: ident: $default: expr),* }","highlight_start":1,"highlight_end":44},{"text":"        $(,{$( $extra_params: ident : $val: expr),* })?","highlight_start":1,"highlight_end":56},{"text":"        $(,[$( ( $related: ident, $extra_id: ident, $handler: expr) ),* ])?","highlight_start":1,"highlight_end":76},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        pub fn new(paras: &mut Pairs<Rule>) ->","highlight_start":1,"highlight_end":47},{"text":"        Result<(NodeData<BoxedNodeSend>, Vec<String>), EngineError> {","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut sidechains = Vec::<String>::new();","highlight_start":1,"highlight_end":55},{"text":"            let mut params_val = std::collections::HashMap::<&str, f32>::new();","highlight_start":1,"highlight_end":80},{"text":"            let mut sidechain_ids = Vec::<u8>::new();","highlight_start":1,"highlight_end":54},{"text":"            let mut sidechain_id: u8 = 0;","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // TODO: need to handle unwarp","highlight_start":1,"highlight_end":43},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                let current_param: String = paras.next().unwrap().as_str().to_string();","highlight_start":1,"highlight_end":88},{"text":"                let parse_result = current_param.parse::<f32>();","highlight_start":1,"highlight_end":65},{"text":"                match parse_result {","highlight_start":1,"highlight_end":37},{"text":"                    Ok(val) => {","highlight_start":1,"highlight_end":33},{"text":"                        params_val.insert(stringify!($id), val);","highlight_start":1,"highlight_end":65},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                    Err(_) => {","highlight_start":1,"highlight_end":32},{"text":"                        sidechains.push(current_param);","highlight_start":1,"highlight_end":56},{"text":"                        params_val.insert(stringify!($id), $default);","highlight_start":1,"highlight_end":70},{"text":"                        sidechain_ids.push(sidechain_id);","highlight_start":1,"highlight_end":58},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };","highlight_start":1,"highlight_end":19},{"text":"                sidechain_id += 1;","highlight_start":1,"highlight_end":35},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    let $extra_id = $handler(params_val[stringify!($related)]);","highlight_start":1,"highlight_end":80},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            )?","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            Ok((NodeData::new1( BoxedNodeSend::new( Self {","highlight_start":1,"highlight_end":59},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $id: params_val[stringify!($id)],","highlight_start":1,"highlight_end":54},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_params: $val,","highlight_start":1,"highlight_end":45},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_id,","highlight_start":1,"highlight_end":35},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                sidechain_ids","highlight_start":1,"highlight_end":30},{"text":"            })), sidechains))","highlight_start":1,"highlight_end":30},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `sidechain_id` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/lib.rs:451:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                sidechain_id += 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/filter.rs:313:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m313\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    handle_params!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            delay_time: 600.0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            gain: 0.5,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `sidechain_id` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":17436,"byte_end":17448,"line_start":451,"line_end":451,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"                sidechain_id += 1;","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/delay.rs","byte_start":325,"byte_end":528,"line_start":15,"line_end":21,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"    handle_params!({","highlight_start":5,"highlight_end":21},{"text":"        delay: 0.1","highlight_start":1,"highlight_end":19},{"text":"    }, [(delay, buf, |d: f32|->Fixed {","highlight_start":1,"highlight_end":39},{"text":"            let size = (d / 1000.0 * 44100.0) as usize;","highlight_start":1,"highlight_end":56},{"text":"            ring_buffer::Fixed::from(vec![0.0; size])","highlight_start":1,"highlight_end":54},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ]);","highlight_start":1,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"handle_params!","def_site_span":{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/lib.rs","byte_start":16221,"byte_end":18097,"line_start":423,"line_end":478,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! handle_params {","highlight_start":1,"highlight_end":29},{"text":"    ( ","highlight_start":1,"highlight_end":7},{"text":"        { $($id: ident: $default: expr),* }","highlight_start":1,"highlight_end":44},{"text":"        $(,{$( $extra_params: ident : $val: expr),* })?","highlight_start":1,"highlight_end":56},{"text":"        $(,[$( ( $related: ident, $extra_id: ident, $handler: expr) ),* ])?","highlight_start":1,"highlight_end":76},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        pub fn new(paras: &mut Pairs<Rule>) ->","highlight_start":1,"highlight_end":47},{"text":"        Result<(NodeData<BoxedNodeSend>, Vec<String>), EngineError> {","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut sidechains = Vec::<String>::new();","highlight_start":1,"highlight_end":55},{"text":"            let mut params_val = std::collections::HashMap::<&str, f32>::new();","highlight_start":1,"highlight_end":80},{"text":"            let mut sidechain_ids = Vec::<u8>::new();","highlight_start":1,"highlight_end":54},{"text":"            let mut sidechain_id: u8 = 0;","highlight_start":1,"highlight_end":42},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // TODO: need to handle unwarp","highlight_start":1,"highlight_end":43},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                let current_param: String = paras.next().unwrap().as_str().to_string();","highlight_start":1,"highlight_end":88},{"text":"                let parse_result = current_param.parse::<f32>();","highlight_start":1,"highlight_end":65},{"text":"                match parse_result {","highlight_start":1,"highlight_end":37},{"text":"                    Ok(val) => {","highlight_start":1,"highlight_end":33},{"text":"                        params_val.insert(stringify!($id), val);","highlight_start":1,"highlight_end":65},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                    Err(_) => {","highlight_start":1,"highlight_end":32},{"text":"                        sidechains.push(current_param);","highlight_start":1,"highlight_end":56},{"text":"                        params_val.insert(stringify!($id), $default);","highlight_start":1,"highlight_end":70},{"text":"                        sidechain_ids.push(sidechain_id);","highlight_start":1,"highlight_end":58},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };","highlight_start":1,"highlight_end":19},{"text":"                sidechain_id += 1;","highlight_start":1,"highlight_end":35},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    let $extra_id = $handler(params_val[stringify!($related)]);","highlight_start":1,"highlight_end":80},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"            )?","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            Ok((NodeData::new1( BoxedNodeSend::new( Self {","highlight_start":1,"highlight_end":59},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $id: params_val[stringify!($id)],","highlight_start":1,"highlight_end":54},{"text":"                )*","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_params: $val,","highlight_start":1,"highlight_end":45},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                $(","highlight_start":1,"highlight_end":19},{"text":"                    $(","highlight_start":1,"highlight_end":23},{"text":"                        $extra_id,","highlight_start":1,"highlight_end":35},{"text":"                    )*","highlight_start":1,"highlight_end":23},{"text":"                )?","highlight_start":1,"highlight_end":19},{"text":"                sidechain_ids","highlight_start":1,"highlight_end":30},{"text":"            })), sidechains))","highlight_start":1,"highlight_end":30},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `sidechain_id` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/lib.rs:451:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                sidechain_id += 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/delay.rs:15:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    handle_params!({\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        delay: 0.1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }, [(delay, buf, |d: f32|->Fixed {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let size = (d / 1000.0 * 44100.0) as usize;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ring_buffer::Fixed::from(vec![0.0; size])\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ]);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"field is never read: `sidechain_ids`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/filter.rs","byte_start":7611,"byte_end":7635,"line_start":228,"line_end":228,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    sidechain_ids: Vec::<u8>","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `sidechain_ids`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/filter.rs:228:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    sidechain_ids: Vec::<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"field is never read: `delay_time`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/filter.rs","byte_start":10266,"byte_end":10281,"line_start":303,"line_end":303,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    delay_time: f32,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `delay_time`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/filter.rs:303:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    delay_time: f32,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"field is never read: `sidechain_ids`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/filter.rs","byte_start":10369,"byte_end":10393,"line_start":309,"line_end":309,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    sidechain_ids: Vec::<u8>","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `sidechain_ids`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/filter.rs:309:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    sidechain_ids: Vec::<u8>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"field is never read: `step`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/state.rs","byte_start":225,"byte_end":236,"line_start":8,"line_end":8,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    step: usize","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field is never read: `step`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/state.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    step: usize\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"method is never used: `new`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"/Users/chaosprint/Dev/glicol-rs/src/node/system.rs","byte_start":369,"byte_end":533,"line_start":18,"line_end":22,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    pub fn new() ->","highlight_start":5,"highlight_end":20},{"text":"    Result<(NodeData<BoxedNodeSend>, Vec<String>), EngineError> {","highlight_start":1,"highlight_end":66},{"text":"        Ok((NodeData::new1( BoxedNodeSend::new( Self {","highlight_start":1,"highlight_end":55},{"text":"        })), vec![]))","highlight_start":1,"highlight_end":22},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method is never used: `new`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chaosprint/Dev/glicol-rs/src/node/system.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new() ->\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Result<(NodeData<BoxedNodeSend>, Vec<String>), EngineError> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Ok((NodeData::new1( BoxedNodeSend::new( Self {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })), vec![]))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\n"}
