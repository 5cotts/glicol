{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0","program":"/Users/chaosprint/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","dasp_ring_buffer","--edition=2018","/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=12b92e79e8724045","-C","extra-filename=-12b92e79e8724045","--out-dir","/Users/chaosprint/Dev/glicol-wasm/target/rls/debug/deps","-L","dependency=/Users/chaosprint/Dev/glicol-wasm/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/chaosprint/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/chaosprint/Dev/glicol-wasm/target/rls/debug/deps/libdasp_ring_buffer-12b92e79e8724045.rmeta"},"prelude":{"crate_id":{"name":"dasp_ring_buffer","disambiguator":[16401509384445664778,14337884719814784892]},"crate_root":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src","external_crates":[{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}}],"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":0,"byte_end":26845,"line_start":1,"line_end":893,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":0,"byte_end":26845,"line_start":1,"line_end":893,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":31},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":133},{"krate":0,"index":138},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":185},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":211},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":242},{"krate":0,"index":246},{"krate":0,"index":250},{"krate":0,"index":255},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":268},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":302},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":337},{"krate":0,"index":341},{"krate":0,"index":346},{"krate":0,"index":350},{"krate":0,"index":354},{"krate":0,"index":359},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":372},{"krate":0,"index":376},{"krate":0,"index":380},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":402},{"krate":0,"index":406},{"krate":0,"index":411},{"krate":0,"index":415},{"krate":0,"index":419},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":432},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":445},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":463},{"krate":0,"index":467},{"krate":0,"index":471},{"krate":0,"index":476},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":489},{"krate":0,"index":493},{"krate":0,"index":497},{"krate":0,"index":502},{"krate":0,"index":506},{"krate":0,"index":510},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":523},{"krate":0,"index":528},{"krate":0,"index":532},{"krate":0,"index":536},{"krate":0,"index":541},{"krate":0,"index":545},{"krate":0,"index":549},{"krate":0,"index":554},{"krate":0,"index":558},{"krate":0,"index":562},{"krate":0,"index":567},{"krate":0,"index":571},{"krate":0,"index":575},{"krate":0,"index":580},{"krate":0,"index":584},{"krate":0,"index":588},{"krate":0,"index":593},{"krate":0,"index":597},{"krate":0,"index":601},{"krate":0,"index":606},{"krate":0,"index":610},{"krate":0,"index":614},{"krate":0,"index":619},{"krate":0,"index":623},{"krate":0,"index":627},{"krate":0,"index":632},{"krate":0,"index":636},{"krate":0,"index":640},{"krate":0,"index":645},{"krate":0,"index":649},{"krate":0,"index":653},{"krate":0,"index":658},{"krate":0,"index":662},{"krate":0,"index":666},{"krate":0,"index":671},{"krate":0,"index":675},{"krate":0,"index":679},{"krate":0,"index":684},{"krate":0,"index":688},{"krate":0,"index":692},{"krate":0,"index":697},{"krate":0,"index":701},{"krate":0,"index":705},{"krate":0,"index":710},{"krate":0,"index":714},{"krate":0,"index":718},{"krate":0,"index":723},{"krate":0,"index":727},{"krate":0,"index":731},{"krate":0,"index":736},{"krate":0,"index":740},{"krate":0,"index":744},{"krate":0,"index":749},{"krate":0,"index":753},{"krate":0,"index":757},{"krate":0,"index":762},{"krate":0,"index":766},{"krate":0,"index":770},{"krate":0,"index":775},{"krate":0,"index":779},{"krate":0,"index":783},{"krate":0,"index":788},{"krate":0,"index":792},{"krate":0,"index":796},{"krate":0,"index":801},{"krate":0,"index":805},{"krate":0,"index":809},{"krate":0,"index":814},{"krate":0,"index":818},{"krate":0,"index":822},{"krate":0,"index":827},{"krate":0,"index":831},{"krate":0,"index":835},{"krate":0,"index":840},{"krate":0,"index":844},{"krate":0,"index":848},{"krate":0,"index":853},{"krate":0,"index":857},{"krate":0,"index":861},{"krate":0,"index":866},{"krate":0,"index":870},{"krate":0,"index":874},{"krate":0,"index":879},{"krate":0,"index":883},{"krate":0,"index":887},{"krate":0,"index":892},{"krate":0,"index":896},{"krate":0,"index":900},{"krate":0,"index":905},{"krate":0,"index":909},{"krate":0,"index":913},{"krate":0,"index":918},{"krate":0,"index":922},{"krate":0,"index":926},{"krate":0,"index":931},{"krate":0,"index":935},{"krate":0,"index":939},{"krate":0,"index":944},{"krate":0,"index":948},{"krate":0,"index":952},{"krate":0,"index":957},{"krate":0,"index":961},{"krate":0,"index":965},{"krate":0,"index":970},{"krate":0,"index":974},{"krate":0,"index":978},{"krate":0,"index":983},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":996},{"krate":0,"index":1000},{"krate":0,"index":1004},{"krate":0,"index":1009},{"krate":0,"index":1013},{"krate":0,"index":1017},{"krate":0,"index":1022},{"krate":0,"index":1026},{"krate":0,"index":1030},{"krate":0,"index":1035},{"krate":0,"index":1039},{"krate":0,"index":1043},{"krate":0,"index":1048},{"krate":0,"index":1052},{"krate":0,"index":1056},{"krate":0,"index":1061},{"krate":0,"index":1065},{"krate":0,"index":1069},{"krate":0,"index":1074},{"krate":0,"index":1078},{"krate":0,"index":1082},{"krate":0,"index":1087},{"krate":0,"index":1091},{"krate":0,"index":1095},{"krate":0,"index":1100},{"krate":0,"index":1104},{"krate":0,"index":1108},{"krate":0,"index":1113},{"krate":0,"index":1117},{"krate":0,"index":1121},{"krate":0,"index":1126},{"krate":0,"index":1130},{"krate":0,"index":1134},{"krate":0,"index":1139},{"krate":0,"index":1143},{"krate":0,"index":1147},{"krate":0,"index":1152},{"krate":0,"index":1156},{"krate":0,"index":1160},{"krate":0,"index":1165},{"krate":0,"index":1169},{"krate":0,"index":1173},{"krate":0,"index":1178},{"krate":0,"index":1182},{"krate":0,"index":1186},{"krate":0,"index":1191},{"krate":0,"index":1195},{"krate":0,"index":1199},{"krate":0,"index":1204},{"krate":0,"index":1208},{"krate":0,"index":1212},{"krate":0,"index":1217},{"krate":0,"index":1221},{"krate":0,"index":1225},{"krate":0,"index":1230},{"krate":0,"index":1234},{"krate":0,"index":1238},{"krate":0,"index":1243},{"krate":0,"index":1247},{"krate":0,"index":1251},{"krate":0,"index":1256},{"krate":0,"index":1260},{"krate":0,"index":1264},{"krate":0,"index":1269},{"krate":0,"index":1273},{"krate":0,"index":1277},{"krate":0,"index":1282},{"krate":0,"index":1286},{"krate":0,"index":1290},{"krate":0,"index":1295},{"krate":0,"index":1299},{"krate":0,"index":1303},{"krate":0,"index":1308},{"krate":0,"index":1312},{"krate":0,"index":1316},{"krate":0,"index":1321},{"krate":0,"index":1325},{"krate":0,"index":1329},{"krate":0,"index":1334},{"krate":0,"index":1338},{"krate":0,"index":1342},{"krate":0,"index":1347},{"krate":0,"index":1351},{"krate":0,"index":1355},{"krate":0,"index":1360},{"krate":0,"index":1364},{"krate":0,"index":1368},{"krate":0,"index":1373},{"krate":0,"index":1377},{"krate":0,"index":1381},{"krate":0,"index":1386},{"krate":0,"index":1390},{"krate":0,"index":1394},{"krate":0,"index":1399},{"krate":0,"index":1403},{"krate":0,"index":1407},{"krate":0,"index":1412},{"krate":0,"index":1416},{"krate":0,"index":1420},{"krate":0,"index":1425},{"krate":0,"index":1429},{"krate":0,"index":1433},{"krate":0,"index":1438},{"krate":0,"index":1442},{"krate":0,"index":1446},{"krate":0,"index":1451},{"krate":0,"index":1455},{"krate":0,"index":1459},{"krate":0,"index":1464},{"krate":0,"index":1468},{"krate":0,"index":1472},{"krate":0,"index":1477},{"krate":0,"index":1481},{"krate":0,"index":1485},{"krate":0,"index":1490},{"krate":0,"index":1494},{"krate":0,"index":1498},{"krate":0,"index":1503},{"krate":0,"index":1507},{"krate":0,"index":1511},{"krate":0,"index":1516},{"krate":0,"index":1520},{"krate":0,"index":1524},{"krate":0,"index":1529},{"krate":0,"index":1533},{"krate":0,"index":1537},{"krate":0,"index":1542},{"krate":0,"index":1546},{"krate":0,"index":1550},{"krate":0,"index":1555},{"krate":0,"index":1559},{"krate":0,"index":1563},{"krate":0,"index":1568},{"krate":0,"index":1572},{"krate":0,"index":1576},{"krate":0,"index":1581},{"krate":0,"index":1585},{"krate":0,"index":1589},{"krate":0,"index":1594},{"krate":0,"index":1598},{"krate":0,"index":1602},{"krate":0,"index":1607},{"krate":0,"index":1611},{"krate":0,"index":1615},{"krate":0,"index":1620},{"krate":0,"index":1624},{"krate":0,"index":1628},{"krate":0,"index":1633},{"krate":0,"index":1637},{"krate":0,"index":1641},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1654},{"krate":0,"index":1659},{"krate":0,"index":1663},{"krate":0,"index":1667},{"krate":0,"index":1672},{"krate":0,"index":1676},{"krate":0,"index":1680},{"krate":0,"index":1685},{"krate":0,"index":1689},{"krate":0,"index":1693},{"krate":0,"index":1698},{"krate":0,"index":1702},{"krate":0,"index":1706},{"krate":0,"index":1711},{"krate":0,"index":1715},{"krate":0,"index":1719},{"krate":0,"index":1724},{"krate":0,"index":1728},{"krate":0,"index":1732},{"krate":0,"index":1737},{"krate":0,"index":1741},{"krate":0,"index":1745},{"krate":0,"index":1750},{"krate":0,"index":1754},{"krate":0,"index":1758},{"krate":0,"index":1763},{"krate":0,"index":1767},{"krate":0,"index":1771},{"krate":0,"index":1776},{"krate":0,"index":1780},{"krate":0,"index":1784},{"krate":0,"index":1789},{"krate":0,"index":1793},{"krate":0,"index":1797},{"krate":0,"index":1802},{"krate":0,"index":1806},{"krate":0,"index":1810},{"krate":0,"index":1815},{"krate":0,"index":1819},{"krate":0,"index":1823},{"krate":0,"index":1828},{"krate":0,"index":1832},{"krate":0,"index":1836},{"krate":0,"index":1841},{"krate":0,"index":1845},{"krate":0,"index":1849},{"krate":0,"index":1854},{"krate":0,"index":1858},{"krate":0,"index":1862},{"krate":0,"index":1867},{"krate":0,"index":1871},{"krate":0,"index":1875},{"krate":0,"index":1900},{"krate":0,"index":1897},{"krate":0,"index":1894},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1879},{"krate":0,"index":55},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":78},{"krate":0,"index":82},{"krate":0,"index":1902},{"krate":0,"index":1928},{"krate":0,"index":1925},{"krate":0,"index":1922},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1907},{"krate":0,"index":85},{"krate":0,"index":89},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":116},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":129}],"decl_id":null,"docs":" Items related to the implementation of ring buffers.","sig":null,"attributes":[{"value":"! Items related to the implementation of ring buffers.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":0,"byte_end":56,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":57,"byte_end":60,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The primary items of interest in this module include:","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":61,"byte_end":118,"line_start":3,"line_end":3,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":119,"byte_end":122,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! - The [Slice](./trait.Slice.html) and [SliceMut](./trait.SliceMut.html) traits - implemented","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":123,"byte_end":219,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"! for types that may be used as the underlying buffer in `Fixed` and `Bounded` ring buffers.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":220,"byte_end":314,"line_start":6,"line_end":6,"column_start":1,"column_end":95}},{"value":"! - The [Fixed](./struct.Fixed.html) ring buffer type.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":315,"byte_end":371,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"! - The [Bounded](./struct.Bounded.html) ring buffer type.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":372,"byte_end":432,"line_start":8,"line_end":8,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1101,"byte_end":1106,"line_start":37,"line_end":37,"column_start":11,"column_end":16},"name":"Slice","qualname":"::Slice","value":"Slice","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" Types that may be used as a data slice for `Fixed` and `Bounded` ring buffers.\n","sig":null,"attributes":[{"value":"/ Types that may be used as a data slice for `Fixed` and `Bounded` ring buffers.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1008,"byte_end":1090,"line_start":36,"line_end":36,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1163,"byte_end":1170,"line_start":39,"line_end":39,"column_start":10,"column_end":17},"name":"Element","qualname":"::Slice::Element","value":"type Element;","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" The type contained within the slice.\n","sig":null,"attributes":[{"value":"/ The type contained within the slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1113,"byte_end":1153,"line_start":38,"line_end":38,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1210,"byte_end":1215,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"slice","qualname":"::Slice::slice","value":"fn (&self) -> &[Self::Element]","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Borrow the data slice.\n","sig":null,"attributes":[{"value":"/ Borrow the data slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1176,"byte_end":1202,"line_start":40,"line_end":40,"column_start":5,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1348,"byte_end":1356,"line_start":45,"line_end":45,"column_start":11,"column_end":19},"name":"SliceMut","qualname":"::SliceMut","value":"SliceMut: Slice","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" Types that may be used as a data slice for mutable `Fixed` and `Bounded` ring buffers.\n","sig":null,"attributes":[{"value":"/ Types that may be used as a data slice for mutable `Fixed` and `Bounded` ring buffers.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1247,"byte_end":1337,"line_start":44,"line_end":44,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1412,"byte_end":1421,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"slice_mut","qualname":"::SliceMut::slice_mut","value":"fn (&mut self) -> &mut [Self::Element]","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Mutably borrow the data slice.\n","sig":null,"attributes":[{"value":"/ Mutably borrow the data slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1370,"byte_end":1404,"line_start":46,"line_end":46,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1562,"byte_end":1576,"line_start":51,"line_end":51,"column_start":11,"column_end":25},"name":"FixedSizeArray","qualname":"::FixedSizeArray","value":"FixedSizeArray","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" Types that may be used as a constant-length buffer underlying a `Bounded` ring buffer.\n","sig":null,"attributes":[{"value":"/ Types that may be used as a constant-length buffer underlying a `Bounded` ring buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1461,"byte_end":1551,"line_start":50,"line_end":50,"column_start":1,"column_end":91}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1618,"byte_end":1621,"line_start":53,"line_end":53,"column_start":11,"column_end":14},"name":"LEN","qualname":"::FixedSizeArray::LEN","value":"usize","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" The constant length.\n","sig":null,"attributes":[{"value":"/ The constant length.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1583,"byte_end":1607,"line_start":52,"line_end":52,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4710,"byte_end":4715,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"Fixed","qualname":"::Fixed","value":"Fixed {  }","parent":null,"children":[{"krate":0,"index":1877},{"krate":0,"index":1878}],"decl_id":null,"docs":" A ring buffer with a fixed length.","sig":null,"attributes":[{"value":"/ A ring buffer with a fixed length.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":3738,"byte_end":3776,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":3777,"byte_end":3780,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ *AKA Circular buffer, cyclic buffer, FIFO queue.*","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":3781,"byte_end":3834,"line_start":146,"line_end":146,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":3835,"byte_end":3838,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Elements are pushed and popped from the buffer simultaneously in order to retain a consistent","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":3839,"byte_end":3936,"line_start":148,"line_end":148,"column_start":1,"column_end":98}},{"value":"/ length.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":3937,"byte_end":3948,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":3949,"byte_end":3952,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ A `Fixed` ring buffer can be created around any type with a slice to write to.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":3953,"byte_end":4035,"line_start":151,"line_end":151,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4036,"byte_end":4039,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4040,"byte_end":4047,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4048,"byte_end":4063,"line_start":154,"line_end":154,"column_start":1,"column_end":16}},{"value":"/     // From a fixed size array.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4064,"byte_end":4099,"line_start":155,"line_end":155,"column_start":1,"column_end":36}},{"value":"/     dasp_ring_buffer::Fixed::from([1, 2, 3, 4]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4100,"byte_end":4152,"line_start":156,"line_end":156,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4153,"byte_end":4156,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/     // From a Vec.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4157,"byte_end":4179,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/     dasp_ring_buffer::Fixed::from(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4180,"byte_end":4236,"line_start":159,"line_end":159,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4237,"byte_end":4240,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/     // From a Boxed slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4241,"byte_end":4271,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"/     dasp_ring_buffer::Fixed::from(vec![1, 2, 3].into_boxed_slice());","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4272,"byte_end":4344,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4345,"byte_end":4348,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     // From a mutably borrowed slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4349,"byte_end":4390,"line_start":164,"line_end":164,"column_start":1,"column_end":42}},{"value":"/     let mut slice = [1, 2, 3, 4];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4391,"byte_end":4428,"line_start":165,"line_end":165,"column_start":1,"column_end":38}},{"value":"/     dasp_ring_buffer::Fixed::from(&mut slice[..]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4429,"byte_end":4483,"line_start":166,"line_end":166,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4484,"byte_end":4487,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/     // An immutable ring buffer from an immutable slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4488,"byte_end":4548,"line_start":168,"line_end":168,"column_start":1,"column_end":61}},{"value":"/     let slice = [1, 2, 3, 4];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4549,"byte_end":4582,"line_start":169,"line_end":169,"column_start":1,"column_end":34}},{"value":"/     dasp_ring_buffer::Fixed::from(&slice[..]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4583,"byte_end":4633,"line_start":170,"line_end":170,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4634,"byte_end":4639,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4640,"byte_end":4647,"line_start":172,"line_end":172,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5018,"byte_end":5021,"line_start":192,"line_end":192,"column_start":12,"column_end":15},"name":"len","qualname":"<Fixed<S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The fixed length of the buffer.","sig":null,"attributes":[{"value":"/ The fixed length of the buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4798,"byte_end":4833,"line_start":183,"line_end":183,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4838,"byte_end":4841,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4846,"byte_end":4853,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4858,"byte_end":4873,"line_start":186,"line_end":186,"column_start":5,"column_end":20}},{"value":"/     let rb = dasp_ring_buffer::Fixed::from([0; 4]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4878,"byte_end":4933,"line_start":187,"line_end":187,"column_start":5,"column_end":60}},{"value":"/     assert_eq!(rb.len(), 4);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4938,"byte_end":4970,"line_start":188,"line_end":188,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4975,"byte_end":4980,"line_start":189,"line_end":189,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4985,"byte_end":4992,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4997,"byte_end":5006,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5633,"byte_end":5637,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"push","qualname":"<Fixed<S>>::push","value":"fn (&mut self, item: S::Element) -> S::Element","parent":null,"children":[],"decl_id":null,"docs":" Push the given item onto the back of the queue and return the item at the front of the\n queue, ensuring that the length is retained.","sig":null,"attributes":[{"value":"/ Push the given item onto the back of the queue and return the item at the front of the","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5083,"byte_end":5173,"line_start":196,"line_end":196,"column_start":5,"column_end":95}},{"value":"/ queue, ensuring that the length is retained.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5178,"byte_end":5226,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5231,"byte_end":5234,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5239,"byte_end":5246,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5251,"byte_end":5266,"line_start":200,"line_end":200,"column_start":5,"column_end":20}},{"value":"/     let mut rb = dasp_ring_buffer::Fixed::from([0, 1, 2, 3]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5271,"byte_end":5336,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/     assert_eq!(rb.push(4), 0);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5341,"byte_end":5375,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(rb.push(5), 1);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5380,"byte_end":5414,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(rb.push(6), 2);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5419,"byte_end":5453,"line_start":204,"line_end":204,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(rb.push(7), 3);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5458,"byte_end":5492,"line_start":205,"line_end":205,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(rb.push(8), 4);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5497,"byte_end":5531,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/     assert_eq!([rb[0], rb[1], rb[2], rb[3]], [5, 6, 7, 8]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5536,"byte_end":5599,"line_start":207,"line_end":207,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5604,"byte_end":5609,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":5614,"byte_end":5621,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6629,"byte_end":6632,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"get","qualname":"<Fixed<S>>::get","value":"fn (&self, index: usize) -> &S::Element","parent":null,"children":[],"decl_id":null,"docs":" Borrows the item at the given index.","sig":null,"attributes":[{"value":"/ Borrows the item at the given index.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6102,"byte_end":6142,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6147,"byte_end":6150,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ If `index` is out of range it will be looped around the length of the data slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6155,"byte_end":6240,"line_start":227,"line_end":227,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6245,"byte_end":6248,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6253,"byte_end":6260,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6265,"byte_end":6280,"line_start":230,"line_end":230,"column_start":5,"column_end":20}},{"value":"/     let mut rb = dasp_ring_buffer::Fixed::from([0, 1, 2]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6285,"byte_end":6347,"line_start":231,"line_end":231,"column_start":5,"column_end":67}},{"value":"/     assert_eq!(*rb.get(0), 0);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6352,"byte_end":6386,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*rb.get(1), 1);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6391,"byte_end":6425,"line_start":233,"line_end":233,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*rb.get(2), 2);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6430,"byte_end":6464,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*rb.get(3), 0);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6469,"byte_end":6503,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*rb.get(4), 1);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6508,"byte_end":6542,"line_start":236,"line_end":236,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*rb.get(5), 2);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6547,"byte_end":6581,"line_start":237,"line_end":237,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6586,"byte_end":6591,"line_start":238,"line_end":238,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6596,"byte_end":6603,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6608,"byte_end":6617,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6959,"byte_end":6966,"line_start":250,"line_end":250,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fixed<S>>::get_mut","value":"fn (&mut self, index: usize) -> &mut S::Element","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the item at the given index.","sig":null,"attributes":[{"value":"/ Mutably borrows the item at the given index.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6787,"byte_end":6835,"line_start":246,"line_end":246,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6840,"byte_end":6843,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ If `index` is out of range it will be looped around the length of the data slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6848,"byte_end":6933,"line_start":248,"line_end":248,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":6938,"byte_end":6947,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7650,"byte_end":7659,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"set_first","qualname":"<Fixed<S>>::set_first","value":"fn (&mut self, index: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the index of the first element within the data slice.","sig":null,"attributes":[{"value":"/ Sets the index of the first element within the data slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7172,"byte_end":7234,"line_start":258,"line_end":258,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7239,"byte_end":7242,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ If `index` is out of range it will be looped around the length of the data slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7247,"byte_end":7332,"line_start":260,"line_end":260,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7337,"byte_end":7340,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7345,"byte_end":7352,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7357,"byte_end":7372,"line_start":263,"line_end":263,"column_start":5,"column_end":20}},{"value":"/     let mut rb = dasp_ring_buffer::Fixed::from([0, 1, 2, 3]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7377,"byte_end":7442,"line_start":264,"line_end":264,"column_start":5,"column_end":70}},{"value":"/     assert_eq!(rb[0], 0);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7447,"byte_end":7476,"line_start":265,"line_end":265,"column_start":5,"column_end":34}},{"value":"/     rb.set_first(2);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7481,"byte_end":7505,"line_start":266,"line_end":266,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(rb[0], 2);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7510,"byte_end":7539,"line_start":267,"line_end":267,"column_start":5,"column_end":34}},{"value":"/     rb.set_first(5);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7544,"byte_end":7568,"line_start":268,"line_end":268,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(rb[0], 1);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7573,"byte_end":7602,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7607,"byte_end":7612,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7617,"byte_end":7624,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7629,"byte_end":7638,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8505,"byte_end":8511,"line_start":296,"line_end":296,"column_start":12,"column_end":18},"name":"slices","qualname":"<Fixed<S>>::slices","value":"fn (&self) -> (&[S::Element], &[S::Element])","parent":null,"children":[],"decl_id":null,"docs":" The start and end slices that make up the ring buffer.","sig":null,"attributes":[{"value":"/ The start and end slices that make up the ring buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7739,"byte_end":7797,"line_start":277,"line_end":277,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7802,"byte_end":7805,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ These two slices chained together represent all elements within the buffer in order.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7810,"byte_end":7898,"line_start":279,"line_end":279,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7903,"byte_end":7906,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The first slice is always aligned contiguously behind the second slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7911,"byte_end":7986,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7991,"byte_end":7994,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":7999,"byte_end":8006,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8011,"byte_end":8026,"line_start":284,"line_end":284,"column_start":5,"column_end":20}},{"value":"/     let mut ring_buffer = dasp_ring_buffer::Fixed::from([0; 4]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8031,"byte_end":8099,"line_start":285,"line_end":285,"column_start":5,"column_end":73}},{"value":"/     assert_eq!(ring_buffer.slices(), (&[0, 0, 0, 0][..], &[][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8104,"byte_end":8175,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/     ring_buffer.push(1);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8180,"byte_end":8208,"line_start":287,"line_end":287,"column_start":5,"column_end":33}},{"value":"/     ring_buffer.push(2);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8213,"byte_end":8241,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/     assert_eq!(ring_buffer.slices(), (&[0, 0][..], &[1, 2][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8246,"byte_end":8315,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/     ring_buffer.push(3);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8320,"byte_end":8348,"line_start":290,"line_end":290,"column_start":5,"column_end":33}},{"value":"/     ring_buffer.push(4);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8353,"byte_end":8381,"line_start":291,"line_end":291,"column_start":5,"column_end":33}},{"value":"/     assert_eq!(ring_buffer.slices(), (&[1, 2, 3, 4][..], &[][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8386,"byte_end":8457,"line_start":292,"line_end":292,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8462,"byte_end":8467,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8472,"byte_end":8479,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8484,"byte_end":8493,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8752,"byte_end":8762,"line_start":303,"line_end":303,"column_start":12,"column_end":22},"name":"slices_mut","qualname":"<Fixed<S>>::slices_mut","value":"fn (&mut self) -> (&mut [S::Element], &mut [S::Element])","parent":null,"children":[],"decl_id":null,"docs":" The same as the `slices` method, but returns mutable slices instead.\n","sig":null,"attributes":[{"value":"/ The same as the `slices` method, but returns mutable slices instead.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8654,"byte_end":8726,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8731,"byte_end":8740,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9075,"byte_end":9084,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"iter_loop","qualname":"<Fixed<S>>::iter_loop","value":"fn (&self) -> Skip<Cycle<slice::Iter<S::Element>>>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that repeatedly yields a reference to each element in the buffer.\n","sig":null,"attributes":[{"value":"/ Produce an iterator that repeatedly yields a reference to each element in the buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":8960,"byte_end":9049,"line_start":311,"line_end":311,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9054,"byte_end":9063,"line_start":312,"line_end":312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9307,"byte_end":9311,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"iter","qualname":"<Fixed<S>>::iter","value":"fn (&self) -> Take<Skip<Cycle<slice::Iter<S::Element>>>>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that yields a reference to each element in the buffer.\n","sig":null,"attributes":[{"value":"/ Produce an iterator that yields a reference to each element in the buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9203,"byte_end":9281,"line_start":317,"line_end":317,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9286,"byte_end":9295,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9545,"byte_end":9553,"line_start":325,"line_end":325,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Fixed<S>>::iter_mut","value":"fn (&mut self) -> Chain<slice::IterMut<S::Element>, slice::IterMut<S::Element>>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that yields a mutable reference to each element in the buffer.\n","sig":null,"attributes":[{"value":"/ Produce an iterator that yields a mutable reference to each element in the buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9433,"byte_end":9519,"line_start":323,"line_end":323,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9524,"byte_end":9533,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10200,"byte_end":10214,"line_start":341,"line_end":341,"column_start":12,"column_end":26},"name":"from_raw_parts","qualname":"<Fixed<S>>::from_raw_parts","value":"fn (first: usize, data: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Fixed` ring buffer from its starting index and data buffer type.","sig":null,"attributes":[{"value":"/ Creates a `Fixed` ring buffer from its starting index and data buffer type.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9771,"byte_end":9850,"line_start":333,"line_end":333,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9855,"byte_end":9858,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ **Panic!**s if the given index is out of range of the given data slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9863,"byte_end":9938,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9943,"byte_end":9946,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ **Note:** This method should only be necessary if you require specifying a first index.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":9951,"byte_end":10042,"line_start":337,"line_end":337,"column_start":5,"column_end":96}},{"value":"/ Please see the `ring_buffer::Fixed::from` function for a simpler constructor that does not","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10047,"byte_end":10141,"line_start":338,"line_end":338,"column_start":5,"column_end":99}},{"value":"/ require a `first` index.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10146,"byte_end":10174,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10179,"byte_end":10188,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10546,"byte_end":10570,"line_start":350,"line_end":350,"column_start":19,"column_end":43},"name":"from_raw_parts_unchecked","qualname":"<Fixed<S>>::from_raw_parts_unchecked","value":"fn (first: usize, data: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Fixed` ring buffer from its starting index and data buffer type.","sig":null,"attributes":[{"value":"/ Creates a `Fixed` ring buffer from its starting index and data buffer type.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10334,"byte_end":10413,"line_start":346,"line_end":346,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10418,"byte_end":10421,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe as there is no guarantee that `first` < `data.slice().len()`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10426,"byte_end":10513,"line_start":348,"line_end":348,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10518,"byte_end":10527,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10840,"byte_end":10854,"line_start":359,"line_end":359,"column_start":12,"column_end":26},"name":"into_raw_parts","qualname":"<Fixed<S>>::into_raw_parts","value":"fn (self) -> (usize, S)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Fixed` ring buffer and returns its parts:","sig":null,"attributes":[{"value":"/ Consumes the `Fixed` ring buffer and returns its parts:","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10645,"byte_end":10704,"line_start":354,"line_end":354,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10709,"byte_end":10712,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ - `usize` is an index into the first element of the buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10717,"byte_end":10780,"line_start":356,"line_end":356,"column_start":5,"column_end":68}},{"value":"/ - `S` is the buffer data.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10785,"byte_end":10814,"line_start":357,"line_end":357,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10819,"byte_end":10828,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1902},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13117,"byte_end":13124,"line_start":450,"line_end":450,"column_start":12,"column_end":19},"name":"Bounded","qualname":"::Bounded","value":"Bounded {  }","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906}],"decl_id":null,"docs":" A ring buffer with an upper bound on its length.","sig":null,"attributes":[{"value":"/ A ring buffer with an upper bound on its length.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":11954,"byte_end":12006,"line_start":417,"line_end":417,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12007,"byte_end":12010,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ *AKA Circular buffer, cyclic buffer, FIFO queue.*","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12011,"byte_end":12064,"line_start":419,"line_end":419,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12065,"byte_end":12068,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ Elements can be pushed to the back of the buffer and popped from the front.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12069,"byte_end":12148,"line_start":421,"line_end":421,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12149,"byte_end":12152,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Elements must be `Copy` due to the behaviour of the `push` and `pop` methods. If you require","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12153,"byte_end":12249,"line_start":423,"line_end":423,"column_start":1,"column_end":97}},{"value":"/ working with non-`Copy` elements, the `std` `VecDeque` type may be better suited.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12250,"byte_end":12335,"line_start":424,"line_end":424,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12336,"byte_end":12339,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ A `Bounded` ring buffer can be created from any type providing a slice to use for pushing and","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12340,"byte_end":12437,"line_start":426,"line_end":426,"column_start":1,"column_end":98}},{"value":"/ popping elements.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12438,"byte_end":12459,"line_start":427,"line_end":427,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12460,"byte_end":12463,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12464,"byte_end":12471,"line_start":429,"line_end":429,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12472,"byte_end":12487,"line_start":430,"line_end":430,"column_start":1,"column_end":16}},{"value":"/     // From a fixed size array.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12488,"byte_end":12523,"line_start":431,"line_end":431,"column_start":1,"column_end":36}},{"value":"/     dasp_ring_buffer::Bounded::from([0; 4]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12524,"byte_end":12572,"line_start":432,"line_end":432,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12573,"byte_end":12576,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/     // From a Vec.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12577,"byte_end":12599,"line_start":434,"line_end":434,"column_start":1,"column_end":23}},{"value":"/     dasp_ring_buffer::Bounded::from(vec![0; 4]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12600,"byte_end":12652,"line_start":435,"line_end":435,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12653,"byte_end":12656,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/     // From a Boxed slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12657,"byte_end":12687,"line_start":437,"line_end":437,"column_start":1,"column_end":31}},{"value":"/     dasp_ring_buffer::Bounded::from(vec![0; 3].into_boxed_slice());","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12688,"byte_end":12759,"line_start":438,"line_end":438,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12760,"byte_end":12763,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/     // From a mutably borrowed slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12764,"byte_end":12805,"line_start":440,"line_end":440,"column_start":1,"column_end":42}},{"value":"/     let mut slice = [0; 4];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12806,"byte_end":12837,"line_start":441,"line_end":441,"column_start":1,"column_end":32}},{"value":"/     dasp_ring_buffer::Bounded::from(&mut slice[..]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12838,"byte_end":12894,"line_start":442,"line_end":442,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12895,"byte_end":12898,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/     // An immutable ring buffer from an immutable slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12899,"byte_end":12959,"line_start":444,"line_end":444,"column_start":1,"column_end":61}},{"value":"/     let slice = [0; 4];","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12960,"byte_end":12987,"line_start":445,"line_end":445,"column_start":1,"column_end":28}},{"value":"/     dasp_ring_buffer::Bounded::from(&slice[..]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":12988,"byte_end":13040,"line_start":446,"line_end":446,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13041,"byte_end":13046,"line_start":447,"line_end":447,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13047,"byte_end":13054,"line_start":448,"line_end":448,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13447,"byte_end":13459,"line_start":460,"line_end":460,"column_start":12,"column_end":24},"name":"DrainBounded","qualname":"::DrainBounded","value":"DrainBounded {  }","parent":null,"children":[{"krate":0,"index":88}],"decl_id":null,"docs":" An iterator that drains the ring buffer by `pop`ping each element one at a time.","sig":null,"attributes":[{"value":"/ An iterator that drains the ring buffer by `pop`ping each element one at a time.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13180,"byte_end":13264,"line_start":456,"line_end":456,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13265,"byte_end":13268,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ Note that only elements yielded by `DrainBounded::next` will be popped from the ring buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13269,"byte_end":13365,"line_start":458,"line_end":458,"column_start":1,"column_end":97}},{"value":"/ That is, all non-yielded elements will remain in the ring buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13366,"byte_end":13435,"line_start":459,"line_end":459,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14163,"byte_end":14172,"line_start":483,"line_end":483,"column_start":12,"column_end":21},"name":"from_full","qualname":"<Bounded<S>>::from_full","value":"fn (data: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The same as the `From` implementation, but assumes that the given `data` is full of valid\n elements and initialises the ring buffer with a length equal to `max_len`.","sig":null,"attributes":[{"value":"/ The same as the `From` implementation, but assumes that the given `data` is full of valid","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13576,"byte_end":13669,"line_start":469,"line_end":469,"column_start":5,"column_end":98}},{"value":"/ elements and initialises the ring buffer with a length equal to `max_len`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13674,"byte_end":13752,"line_start":470,"line_end":470,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13757,"byte_end":13760,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13765,"byte_end":13772,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13777,"byte_end":13792,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let mut rb = dasp_ring_buffer::Bounded::from_full([0, 1, 2, 3]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13797,"byte_end":13869,"line_start":474,"line_end":474,"column_start":5,"column_end":77}},{"value":"/     assert_eq!(rb.len(), rb.max_len());","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13874,"byte_end":13917,"line_start":475,"line_end":475,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(rb.pop(), Some(0));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13922,"byte_end":13960,"line_start":476,"line_end":476,"column_start":5,"column_end":43}},{"value":"/     assert_eq!(rb.pop(), Some(1));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13965,"byte_end":14003,"line_start":477,"line_end":477,"column_start":5,"column_end":43}},{"value":"/     assert_eq!(rb.pop(), Some(2));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14008,"byte_end":14046,"line_start":478,"line_end":478,"column_start":5,"column_end":43}},{"value":"/     assert_eq!(rb.pop(), Some(3));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14051,"byte_end":14089,"line_start":479,"line_end":479,"column_start":5,"column_end":43}},{"value":"/     assert_eq!(rb.pop(), None);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14094,"byte_end":14129,"line_start":480,"line_end":480,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14134,"byte_end":14139,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14144,"byte_end":14151,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14596,"byte_end":14603,"line_start":497,"line_end":497,"column_start":12,"column_end":19},"name":"max_len","qualname":"<Bounded<S>>::max_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum length that the `Bounded` buffer can be before pushing would overwrite the\n front of the buffer.","sig":null,"attributes":[{"value":"/ The maximum length that the `Bounded` buffer can be before pushing would overwrite the","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14261,"byte_end":14351,"line_start":487,"line_end":487,"column_start":5,"column_end":95}},{"value":"/ front of the buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14356,"byte_end":14380,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14385,"byte_end":14388,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14393,"byte_end":14400,"line_start":490,"line_end":490,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14405,"byte_end":14420,"line_start":491,"line_end":491,"column_start":5,"column_end":20}},{"value":"/     let mut ring_buffer = dasp_ring_buffer::Bounded::from([0i32; 3]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14425,"byte_end":14498,"line_start":492,"line_end":492,"column_start":5,"column_end":78}},{"value":"/     assert_eq!(ring_buffer.max_len(), 3);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14503,"byte_end":14548,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14553,"byte_end":14558,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14563,"byte_end":14570,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14575,"byte_end":14584,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14919,"byte_end":14922,"line_start":510,"line_end":510,"column_start":12,"column_end":15},"name":"len","qualname":"<Bounded<S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The current length of the ring buffer.","sig":null,"attributes":[{"value":"/ The current length of the ring buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14665,"byte_end":14707,"line_start":501,"line_end":501,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14712,"byte_end":14715,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14720,"byte_end":14727,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14732,"byte_end":14747,"line_start":504,"line_end":504,"column_start":5,"column_end":20}},{"value":"/     let mut ring_buffer = dasp_ring_buffer::Bounded::from([0i32; 3]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14752,"byte_end":14825,"line_start":505,"line_end":505,"column_start":5,"column_end":78}},{"value":"/     assert_eq!(ring_buffer.len(), 0);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14830,"byte_end":14871,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14876,"byte_end":14881,"line_start":507,"line_end":507,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14886,"byte_end":14893,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14898,"byte_end":14907,"line_start":509,"line_end":509,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15318,"byte_end":15326,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bounded<S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether or not the ring buffer's length is equal to `0`.","sig":null,"attributes":[{"value":"/ Whether or not the ring buffer's length is equal to `0`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":14969,"byte_end":15029,"line_start":514,"line_end":514,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15034,"byte_end":15037,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `self.len() == 0`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15042,"byte_end":15078,"line_start":516,"line_end":516,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15083,"byte_end":15086,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15091,"byte_end":15098,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15103,"byte_end":15118,"line_start":519,"line_end":519,"column_start":5,"column_end":20}},{"value":"/     let mut rb = dasp_ring_buffer::Bounded::from([0i32; 2]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15123,"byte_end":15187,"line_start":520,"line_end":520,"column_start":5,"column_end":69}},{"value":"/     assert!(rb.is_empty());","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15192,"byte_end":15223,"line_start":521,"line_end":521,"column_start":5,"column_end":36}},{"value":"/     rb.push(0);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15228,"byte_end":15247,"line_start":522,"line_end":522,"column_start":5,"column_end":24}},{"value":"/     assert!(!rb.is_empty());","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15252,"byte_end":15284,"line_start":523,"line_end":523,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15289,"byte_end":15294,"line_start":524,"line_end":524,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15299,"byte_end":15306,"line_start":525,"line_end":525,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15790,"byte_end":15797,"line_start":544,"line_end":544,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Bounded<S>>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether or not the ring buffer's length is equal to the maximum length.","sig":null,"attributes":[{"value":"/ Whether or not the ring buffer's length is equal to the maximum length.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15377,"byte_end":15452,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15457,"byte_end":15460,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `self.len() == self.max_len()`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15465,"byte_end":15514,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15519,"byte_end":15522,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15527,"byte_end":15534,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15539,"byte_end":15554,"line_start":535,"line_end":535,"column_start":5,"column_end":20}},{"value":"/     let mut rb = dasp_ring_buffer::Bounded::from([0i32; 2]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15559,"byte_end":15623,"line_start":536,"line_end":536,"column_start":5,"column_end":69}},{"value":"/     assert!(!rb.is_full());","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15628,"byte_end":15659,"line_start":537,"line_end":537,"column_start":5,"column_end":36}},{"value":"/     rb.push(0);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15664,"byte_end":15683,"line_start":538,"line_end":538,"column_start":5,"column_end":24}},{"value":"/     rb.push(1);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15688,"byte_end":15707,"line_start":539,"line_end":539,"column_start":5,"column_end":24}},{"value":"/     assert!(rb.is_full());","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15712,"byte_end":15742,"line_start":540,"line_end":540,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15747,"byte_end":15752,"line_start":541,"line_end":541,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15757,"byte_end":15764,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15769,"byte_end":15778,"line_start":543,"line_end":543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16758,"byte_end":16764,"line_start":570,"line_end":570,"column_start":12,"column_end":18},"name":"slices","qualname":"<Bounded<S>>::slices","value":"fn (&self) -> (&[S::Element], &[S::Element])","parent":null,"children":[],"decl_id":null,"docs":" The start and end slices that make up the ring buffer.","sig":null,"attributes":[{"value":"/ The start and end slices that make up the ring buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15861,"byte_end":15919,"line_start":548,"line_end":548,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15924,"byte_end":15927,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ These two slices chained together represent all elements within the buffer in order.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":15932,"byte_end":16020,"line_start":550,"line_end":550,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16025,"byte_end":16028,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ The first slice is always aligned contiguously behind the second slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16033,"byte_end":16108,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16113,"byte_end":16116,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16121,"byte_end":16128,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16133,"byte_end":16148,"line_start":555,"line_end":555,"column_start":5,"column_end":20}},{"value":"/     let mut ring_buffer = dasp_ring_buffer::Bounded::from([0i32; 4]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16153,"byte_end":16226,"line_start":556,"line_end":556,"column_start":5,"column_end":78}},{"value":"/     assert_eq!(ring_buffer.slices(), (&[][..], &[][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16231,"byte_end":16292,"line_start":557,"line_end":557,"column_start":5,"column_end":66}},{"value":"/     ring_buffer.push(1);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16297,"byte_end":16325,"line_start":558,"line_end":558,"column_start":5,"column_end":33}},{"value":"/     ring_buffer.push(2);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16330,"byte_end":16358,"line_start":559,"line_end":559,"column_start":5,"column_end":33}},{"value":"/     assert_eq!(ring_buffer.slices(), (&[1, 2][..], &[][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16363,"byte_end":16428,"line_start":560,"line_end":560,"column_start":5,"column_end":70}},{"value":"/     ring_buffer.push(3);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16433,"byte_end":16461,"line_start":561,"line_end":561,"column_start":5,"column_end":33}},{"value":"/     ring_buffer.push(4);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16466,"byte_end":16494,"line_start":562,"line_end":562,"column_start":5,"column_end":33}},{"value":"/     assert_eq!(ring_buffer.slices(), (&[1, 2, 3, 4][..], &[][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16499,"byte_end":16570,"line_start":563,"line_end":563,"column_start":5,"column_end":76}},{"value":"/     ring_buffer.push(5);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16575,"byte_end":16603,"line_start":564,"line_end":564,"column_start":5,"column_end":33}},{"value":"/     ring_buffer.push(6);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16608,"byte_end":16636,"line_start":565,"line_end":565,"column_start":5,"column_end":33}},{"value":"/     assert_eq!(ring_buffer.slices(), (&[3, 4][..], &[5, 6][..]));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16641,"byte_end":16710,"line_start":566,"line_end":566,"column_start":5,"column_end":74}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16715,"byte_end":16720,"line_start":567,"line_end":567,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16725,"byte_end":16732,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":16737,"byte_end":16746,"line_start":569,"line_end":569,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17179,"byte_end":17189,"line_start":582,"line_end":582,"column_start":12,"column_end":22},"name":"slices_mut","qualname":"<Bounded<S>>::slices_mut","value":"fn (&mut self) -> (&mut [S::Element], &mut [S::Element])","parent":null,"children":[],"decl_id":null,"docs":" The same as the `slices` method, but returns mutable slices instead.\n","sig":null,"attributes":[{"value":"/ The same as the `slices` method, but returns mutable slices instead.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17081,"byte_end":17153,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17158,"byte_end":17167,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18043,"byte_end":18047,"line_start":609,"line_end":609,"column_start":12,"column_end":16},"name":"iter","qualname":"<Bounded<S>>::iter","value":"fn (&self) -> Chain<slice::Iter<S::Element>, slice::Iter<S::Element>>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that yields a reference to each element in the buffer.","sig":null,"attributes":[{"value":"/ Produce an iterator that yields a reference to each element in the buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17573,"byte_end":17651,"line_start":595,"line_end":595,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17656,"byte_end":17659,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ This method uses the `slices` method internally.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17664,"byte_end":17716,"line_start":597,"line_end":597,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17721,"byte_end":17724,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17729,"byte_end":17736,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17741,"byte_end":17756,"line_start":600,"line_end":600,"column_start":5,"column_end":20}},{"value":"/     let mut rb = dasp_ring_buffer::Bounded::from([0i32; 3]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17761,"byte_end":17825,"line_start":601,"line_end":601,"column_start":5,"column_end":69}},{"value":"/     assert_eq!(rb.iter().count(), 0);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17830,"byte_end":17871,"line_start":602,"line_end":602,"column_start":5,"column_end":46}},{"value":"/     rb.push(1);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17876,"byte_end":17895,"line_start":603,"line_end":603,"column_start":5,"column_end":24}},{"value":"/     rb.push(2);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17900,"byte_end":17919,"line_start":604,"line_end":604,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(rb.iter().cloned().collect::<Vec<_>>(), vec![1, 2]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":17924,"byte_end":17995,"line_start":605,"line_end":605,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18000,"byte_end":18005,"line_start":606,"line_end":606,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18010,"byte_end":18017,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18022,"byte_end":18031,"line_start":608,"line_end":608,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18389,"byte_end":18397,"line_start":618,"line_end":618,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Bounded<S>>::iter_mut","value":"fn (&mut self) -> Chain<slice::IterMut<S::Element>, slice::IterMut<S::Element>>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that yields a mutable reference to each element in the buffer.","sig":null,"attributes":[{"value":"/ Produce an iterator that yields a mutable reference to each element in the buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18208,"byte_end":18294,"line_start":614,"line_end":614,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18299,"byte_end":18302,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ This method uses the `slices_mut` method internally.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18307,"byte_end":18363,"line_start":616,"line_end":616,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18368,"byte_end":18377,"line_start":617,"line_end":617,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19020,"byte_end":19023,"line_start":640,"line_end":640,"column_start":12,"column_end":15},"name":"get","qualname":"<Bounded<S>>::get","value":"fn (&self, index: usize) -> Option<&S::Element>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the item at the given index.","sig":null,"attributes":[{"value":"/ Borrows the item at the given index.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18615,"byte_end":18655,"line_start":626,"line_end":626,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18660,"byte_end":18663,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there is no element at the given index.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18668,"byte_end":18729,"line_start":628,"line_end":628,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18734,"byte_end":18737,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18742,"byte_end":18749,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18754,"byte_end":18769,"line_start":631,"line_end":631,"column_start":5,"column_end":20}},{"value":"/     let mut rb = dasp_ring_buffer::Bounded::from([0i32; 4]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18774,"byte_end":18838,"line_start":632,"line_end":632,"column_start":5,"column_end":69}},{"value":"/     assert_eq!(rb.get(1), None);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18843,"byte_end":18879,"line_start":633,"line_end":633,"column_start":5,"column_end":41}},{"value":"/     rb.push(0);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18884,"byte_end":18903,"line_start":634,"line_end":634,"column_start":5,"column_end":24}},{"value":"/     rb.push(1);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18908,"byte_end":18927,"line_start":635,"line_end":635,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(rb.get(1), Some(&1));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18932,"byte_end":18972,"line_start":636,"line_end":636,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18977,"byte_end":18982,"line_start":637,"line_end":637,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18987,"byte_end":18994,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":18999,"byte_end":19008,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19425,"byte_end":19432,"line_start":652,"line_end":652,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Bounded<S>>::get_mut","value":"fn (&mut self, index: usize) -> Option<&mut S::Element>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the item at the given index.","sig":null,"attributes":[{"value":"/ Mutably borrows the item at the given index.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19277,"byte_end":19325,"line_start":648,"line_end":648,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19330,"byte_end":19333,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there is no element at the given index.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19338,"byte_end":19399,"line_start":650,"line_end":650,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19404,"byte_end":19413,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20627,"byte_end":20631,"line_start":683,"line_end":683,"column_start":12,"column_end":16},"name":"push","qualname":"<Bounded<S>>::push","value":"fn (&mut self, elem: S::Element) -> Option<S::Element>","parent":null,"children":[],"decl_id":null,"docs":" Pushes the given element to the back of the buffer.","sig":null,"attributes":[{"value":"/ Pushes the given element to the back of the buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19741,"byte_end":19796,"line_start":663,"line_end":663,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19801,"byte_end":19804,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ If the buffer length is currently the max length, this replaces the element at the front of","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19809,"byte_end":19904,"line_start":665,"line_end":665,"column_start":5,"column_end":100}},{"value":"/ the buffer and returns it.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19909,"byte_end":19939,"line_start":666,"line_end":666,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19944,"byte_end":19947,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If the buffer length is less than the max length, this pushes the element to the back of","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":19952,"byte_end":20044,"line_start":668,"line_end":668,"column_start":5,"column_end":97}},{"value":"/ the buffer and increases the length of the buffer by `1`. `None` is returned.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20049,"byte_end":20130,"line_start":669,"line_end":669,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20135,"byte_end":20138,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20143,"byte_end":20150,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20155,"byte_end":20170,"line_start":672,"line_end":672,"column_start":5,"column_end":20}},{"value":"/     let mut ring_buffer = dasp_ring_buffer::Bounded::from([0i32; 3]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20175,"byte_end":20248,"line_start":673,"line_end":673,"column_start":5,"column_end":78}},{"value":"/     assert_eq!(ring_buffer.push(1), None);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20253,"byte_end":20299,"line_start":674,"line_end":674,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(ring_buffer.push(2), None);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20304,"byte_end":20350,"line_start":675,"line_end":675,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(ring_buffer.len(), 2);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20355,"byte_end":20396,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(ring_buffer.push(3), None);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20401,"byte_end":20447,"line_start":677,"line_end":677,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(ring_buffer.len(), 3);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20452,"byte_end":20493,"line_start":678,"line_end":678,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(ring_buffer.push(4), Some(1));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20498,"byte_end":20547,"line_start":679,"line_end":679,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(ring_buffer.len(), 3);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20552,"byte_end":20593,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20598,"byte_end":20603,"line_start":681,"line_end":681,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":20608,"byte_end":20615,"line_start":682,"line_end":682,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22173,"byte_end":22176,"line_start":729,"line_end":729,"column_start":12,"column_end":15},"name":"pop","qualname":"<Bounded<S>>::pop","value":"fn (&mut self) -> Option<S::Element>","parent":null,"children":[],"decl_id":null,"docs":" Pop an element from the front of the ring buffer.","sig":null,"attributes":[{"value":"/ Pop an element from the front of the ring buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21609,"byte_end":21662,"line_start":713,"line_end":713,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21667,"byte_end":21670,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ If the buffer is empty, this returns `None`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21675,"byte_end":21723,"line_start":715,"line_end":715,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21728,"byte_end":21731,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21736,"byte_end":21743,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21748,"byte_end":21763,"line_start":718,"line_end":718,"column_start":5,"column_end":20}},{"value":"/     let mut rb = dasp_ring_buffer::Bounded::from_full([0, 1, 2]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21768,"byte_end":21837,"line_start":719,"line_end":719,"column_start":5,"column_end":74}},{"value":"/     assert_eq!(rb.len(), rb.max_len());","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21842,"byte_end":21885,"line_start":720,"line_end":720,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(rb.pop(), Some(0));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21890,"byte_end":21928,"line_start":721,"line_end":721,"column_start":5,"column_end":43}},{"value":"/     assert_eq!(rb.pop(), Some(1));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21933,"byte_end":21971,"line_start":722,"line_end":722,"column_start":5,"column_end":43}},{"value":"/     assert_eq!(rb.push(3), None);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":21976,"byte_end":22013,"line_start":723,"line_end":723,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(rb.pop(), Some(2));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22018,"byte_end":22056,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/     assert_eq!(rb.pop(), Some(3));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22061,"byte_end":22099,"line_start":725,"line_end":725,"column_start":5,"column_end":43}},{"value":"/     assert_eq!(rb.pop(), None);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22104,"byte_end":22139,"line_start":726,"line_end":726,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22144,"byte_end":22149,"line_start":727,"line_end":727,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22154,"byte_end":22161,"line_start":728,"line_end":728,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23303,"byte_end":23308,"line_start":765,"line_end":765,"column_start":12,"column_end":17},"name":"drain","qualname":"<Bounded<S>>::drain","value":"fn (&mut self) -> DrainBounded<S>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that drains the ring buffer by `pop`ping each element one at a time.","sig":null,"attributes":[{"value":"/ Produce an iterator that drains the ring buffer by `pop`ping each element one at a time.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22675,"byte_end":22767,"line_start":751,"line_end":751,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22772,"byte_end":22775,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ Note that only elements yielded by `DrainBounded::next` will be popped from the ring buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22780,"byte_end":22876,"line_start":753,"line_end":753,"column_start":5,"column_end":101}},{"value":"/ That is, all non-yielded elements will remain in the ring buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22881,"byte_end":22950,"line_start":754,"line_end":754,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22955,"byte_end":22958,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22963,"byte_end":22970,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ fn main() {","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22975,"byte_end":22990,"line_start":757,"line_end":757,"column_start":5,"column_end":20}},{"value":"/     let mut rb = dasp_ring_buffer::Bounded::from_full([0, 1, 2, 3]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":22995,"byte_end":23067,"line_start":758,"line_end":758,"column_start":5,"column_end":77}},{"value":"/     assert_eq!(rb.drain().take(2).collect::<Vec<_>>(), vec![0, 1]);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23072,"byte_end":23143,"line_start":759,"line_end":759,"column_start":5,"column_end":76}},{"value":"/     assert_eq!(rb.pop(), Some(2));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23148,"byte_end":23186,"line_start":760,"line_end":760,"column_start":5,"column_end":43}},{"value":"/     assert_eq!(rb.pop(), Some(3));","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23191,"byte_end":23229,"line_start":761,"line_end":761,"column_start":5,"column_end":43}},{"value":"/     assert_eq!(rb.pop(), None);","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23234,"byte_end":23269,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23274,"byte_end":23279,"line_start":763,"line_end":763,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23284,"byte_end":23291,"line_start":764,"line_end":764,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24130,"byte_end":24144,"line_start":785,"line_end":785,"column_start":12,"column_end":26},"name":"from_raw_parts","qualname":"<Bounded<S>>::from_raw_parts","value":"fn (start: usize, len: usize, data: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Bounded` ring buffer from its start index, length and data slice.","sig":null,"attributes":[{"value":"/ Creates a `Bounded` ring buffer from its start index, length and data slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23391,"byte_end":23471,"line_start":769,"line_end":769,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23476,"byte_end":23479,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ The maximum length of the `Bounded` ring buffer is assumed to the length of the given slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23484,"byte_end":23580,"line_start":771,"line_end":771,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23585,"byte_end":23588,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ **Note:** Existing elements within the given `data`'s `slice` will not be dropped when","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23593,"byte_end":23683,"line_start":773,"line_end":773,"column_start":5,"column_end":95}},{"value":"/ overwritten by calls to push. Thus, it is safe for the slice to contain uninitialized","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23688,"byte_end":23777,"line_start":774,"line_end":774,"column_start":5,"column_end":94}},{"value":"/ elements when using this method.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23782,"byte_end":23818,"line_start":775,"line_end":775,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23823,"byte_end":23826,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ **Note:** This method should only be necessary if you require specifying the `start` and","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23831,"byte_end":23923,"line_start":777,"line_end":777,"column_start":5,"column_end":97}},{"value":"/ initial `len`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23928,"byte_end":23946,"line_start":778,"line_end":778,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23951,"byte_end":23954,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ **Panic!**s if the following conditions are not met:","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":23959,"byte_end":24015,"line_start":780,"line_end":780,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24020,"byte_end":24023,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ - `start` < `data.slice().len()`","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24028,"byte_end":24064,"line_start":782,"line_end":782,"column_start":5,"column_end":41}},{"value":"/ - `len` <= `data.slice().len()`","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24069,"byte_end":24104,"line_start":783,"line_end":783,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24109,"byte_end":24118,"line_start":784,"line_end":784,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24610,"byte_end":24634,"line_start":798,"line_end":798,"column_start":19,"column_end":43},"name":"from_raw_parts_unchecked","qualname":"<Bounded<S>>::from_raw_parts_unchecked","value":"fn (start: usize, len: usize, data: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Bounded` ring buffer from its `start` index, `len` and data slice.","sig":null,"attributes":[{"value":"/ Creates a `Bounded` ring buffer from its `start` index, `len` and data slice.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24327,"byte_end":24408,"line_start":791,"line_end":791,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24413,"byte_end":24416,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe as there is no guarantee that either:","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24421,"byte_end":24484,"line_start":793,"line_end":793,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24489,"byte_end":24492,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ - `start` < `data.slice().len()` or","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24497,"byte_end":24536,"line_start":795,"line_end":795,"column_start":5,"column_end":44}},{"value":"/ - `len` <= `data.slice().len()`.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24541,"byte_end":24577,"line_start":796,"line_end":796,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24582,"byte_end":24591,"line_start":797,"line_end":797,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":25151,"byte_end":25165,"line_start":811,"line_end":811,"column_start":19,"column_end":33},"name":"into_raw_parts","qualname":"<Bounded<S>>::into_raw_parts","value":"fn (self) -> (usize, usize, S)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Bounded` ring buffer and returns its parts:","sig":null,"attributes":[{"value":"/ Consumes the `Bounded` ring buffer and returns its parts:","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24728,"byte_end":24789,"line_start":802,"line_end":802,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24794,"byte_end":24797,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ - The first `usize` is an index into the first element of the buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24802,"byte_end":24875,"line_start":804,"line_end":804,"column_start":5,"column_end":78}},{"value":"/ - The second `usize` is the length of the ring buffer.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24880,"byte_end":24938,"line_start":805,"line_end":805,"column_start":5,"column_end":63}},{"value":"/ - `S` is the buffer data.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24943,"byte_end":24972,"line_start":806,"line_end":806,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24977,"byte_end":24980,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe as the returned data may contain uninitialised memory in the case","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":24985,"byte_end":25076,"line_start":808,"line_end":808,"column_start":5,"column_end":96}},{"value":"/ that the ring buffer is not full.","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":25081,"byte_end":25118,"line_start":809,"line_end":809,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":25123,"byte_end":25132,"line_start":810,"line_end":810,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":2048,"byte_end":2051,"line_start":79,"line_end":79,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":2185,"byte_end":2188,"line_start":87,"line_end":87,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":2313,"byte_end":2316,"line_start":94,"line_end":94,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":2448,"byte_end":2451,"line_start":102,"line_end":102,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4763,"byte_end":4768,"line_start":179,"line_end":179,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10970,"byte_end":10975,"line_start":365,"line_end":365,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":11256,"byte_end":11261,"line_start":378,"line_end":378,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":11518,"byte_end":11523,"line_start":392,"line_end":392,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":11707,"byte_end":11712,"line_start":403,"line_end":403,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13517,"byte_end":13524,"line_start":464,"line_end":464,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":25300,"byte_end":25307,"line_start":817,"line_end":817,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":25615,"byte_end":25622,"line_start":831,"line_end":831,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":25892,"byte_end":25899,"line_start":846,"line_end":846,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":26134,"byte_end":26141,"line_start":858,"line_end":858,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":26362,"byte_end":26374,"line_start":869,"line_end":869,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":26715,"byte_end":26727,"line_start":885,"line_end":885,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":1358,"byte_end":1363,"line_start":45,"line_end":45,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":19},"to":{"krate":0,"index":22}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":2048,"byte_end":2051,"line_start":79,"line_end":79,"column_start":19,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":17},"to":{"krate":0,"index":19}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":2185,"byte_end":2188,"line_start":87,"line_end":87,"column_start":22,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":17},"to":{"krate":0,"index":22}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":2313,"byte_end":2316,"line_start":94,"line_end":94,"column_start":19,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":15},"to":{"krate":0,"index":19}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":2448,"byte_end":2451,"line_start":102,"line_end":102,"column_start":22,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":15},"to":{"krate":0,"index":22}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":4763,"byte_end":4768,"line_start":179,"line_end":179,"column_start":9,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":10970,"byte_end":10975,"line_start":365,"line_end":365,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":11256,"byte_end":11261,"line_start":378,"line_end":378,"column_start":32,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":4620}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":11518,"byte_end":11523,"line_start":392,"line_end":392,"column_start":26,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":2099}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":11707,"byte_end":11712,"line_start":403,"line_end":403,"column_start":29,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":2103}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":13517,"byte_end":13524,"line_start":464,"line_end":464,"column_start":9,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":25300,"byte_end":25307,"line_start":817,"line_end":817,"column_start":21,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1902},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":25615,"byte_end":25622,"line_start":831,"line_end":831,"column_start":32,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1902},"to":{"krate":2,"index":4620}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":25892,"byte_end":25899,"line_start":846,"line_end":846,"column_start":26,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1902},"to":{"krate":2,"index":2099}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":26134,"byte_end":26141,"line_start":858,"line_end":858,"column_start":29,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1902},"to":{"krate":2,"index":2103}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":26362,"byte_end":26374,"line_start":869,"line_end":869,"column_start":26,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/chaosprint/.cargo/registry/src/github.com-1ecc6299db9ec823/dasp_ring_buffer-0.11.0/src/lib.rs","byte_start":26715,"byte_end":26727,"line_start":885,"line_end":885,"column_start":35,"column_end":47},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":4672}}]}